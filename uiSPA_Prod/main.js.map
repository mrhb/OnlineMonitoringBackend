{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/fake-backend.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_models/index.ts","./src/app/_models/role.ts","./src/app/_models/user.ts","./src/app/_services/authentication.service.ts","./src/app/_services/index.ts","./src/app/_services/user.service.ts","./src/app/app-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/mainpanel/alarms/alarms.component.ts","./src/app/dashboard/mainpanel/alarms/alarms.component.html","./src/app/dashboard/mainpanel/card/card.component.ts","./src/app/dashboard/mainpanel/card/card.component.html","./src/app/dashboard/mainpanel/comments/comments-datasource.ts","./src/app/dashboard/mainpanel/comments/comments.component.ts","./src/app/dashboard/mainpanel/comments/comments.component.html","./src/app/dashboard/mainpanel/mainpanel.component.ts","./src/app/dashboard/mainpanel/mainpanel.component.html","./src/app/dashboard/mainpanel/power-graph/power-graph.component.ts","./src/app/dashboard/mainpanel/power-graph/power-graph.component.html","./src/app/dashboard/mainpanel/power-graph/progress-bar/progress-bar.component.ts","./src/app/dashboard/mainpanel/power-graph/progress-bar/progress-bar.component.html","./src/app/dashboard/mainpanel/services/services-datasource.ts","./src/app/dashboard/mainpanel/services/services.component.ts","./src/app/dashboard/mainpanel/services/services.component.html","./src/app/dashboard/mainpanel/state-chart/state-chart.component.ts","./src/app/dashboard/mainpanel/state-chart/state-chart.component.html","./src/app/dashboard/mainpanel/summary/summary.component.ts","./src/app/dashboard/mainpanel/summary/summary.component.html","./src/app/first-page/first-page.component.ts","./src/app/first-page/first-page.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/registration/registration.component.ts","./src/app/login/registration/registration.component.html","./src/app/management/activity/activity.component.ts","./src/app/management/activity/activity.component.html","./src/app/management/dialog-body/dialog-body.component.ts","./src/app/management/dialog-body/dialog-body.component.html","./src/app/management/edit/edit.component.ts","./src/app/management/edit/edit.component.html","./src/app/management/edit/edit.module.ts","./src/app/management/edit/group-edit/group-edit.component.ts","./src/app/management/edit/group-edit/group-edit.component.html","./src/app/management/edit/unit-edit/groups/groups.component.ts","./src/app/management/edit/unit-edit/groups/groups.component.html","./src/app/management/edit/unit-edit/information/information.component.ts","./src/app/management/edit/unit-edit/information/information.component.html","./src/app/management/edit/unit-edit/permission/permission.component.ts","./src/app/management/edit/unit-edit/permission/permission.component.html","./src/app/management/edit/unit-edit/unit-edit.component.ts","./src/app/management/edit/unit-edit/unit-edit.component.html","./src/app/management/edit/user-edit/permission/permission.component.ts","./src/app/management/edit/user-edit/permission/permission.component.html","./src/app/management/edit/user-edit/user-edit.component.ts","./src/app/management/edit/user-edit/user-edit.component.html","./src/app/management/groups/groups.component.ts","./src/app/management/groups/groups.component.html","./src/app/management/management.component.ts","./src/app/management/management.component.html","./src/app/management/management.module.ts","./src/app/management/services/data.service.ts","./src/app/management/services/groups.service.ts","./src/app/management/services/message.service.ts","./src/app/management/services/units.service.ts","./src/app/management/services/users-permits.service.ts","./src/app/management/services/users.service.ts","./src/app/management/units/units.component.ts","./src/app/management/units/units.component.html","./src/app/management/users/users.component.ts","./src/app/management/users/users.component.html","./src/app/monitored/content/content.component.ts","./src/app/monitored/content/content.component.html","./src/app/monitored/content/iconview/iconview.component.ts","./src/app/monitored/content/iconview/iconview.component.html","./src/app/monitored/content/moduleview/moduleview.component.ts","./src/app/monitored/content/moduleview/moduleview.component.html","./src/app/monitored/content/tableview/tableview.component.ts","./src/app/monitored/content/tableview/tableview.component.html","./src/app/monitored/content/view-units.directive.ts","./src/app/monitored/map/map.component.ts","./src/app/monitored/map/map.component.html","./src/app/monitored/monitored.component.ts","./src/app/monitored/monitored.component.html","./src/app/monitored/side/filter/filter.component.ts","./src/app/monitored/side/filter/filter.component.html","./src/app/monitored/side/minidetails/minidetails.component.ts","./src/app/monitored/side/minidetails/minidetails.component.html","./src/app/monitored/side/side.component.ts","./src/app/monitored/side/side.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/shared/material.persian-date.adapter.ts","./src/app/sidepanel/groups/groups.component.ts","./src/app/sidepanel/groups/groups.component.html","./src/app/sidepanel/sidepanel.component.ts","./src/app/sidepanel/sidepanel.component.html","./src/app/trends/content/chart-view/DataPreparation.ts","./src/app/trends/content/chart-view/chart-view.component.ts","./src/app/trends/content/chart-view/chart-view.component.html","./src/app/trends/content/content.component.ts","./src/app/trends/content/content.component.html","./src/app/trends/content/table-view/table-view.component.ts","./src/app/trends/content/table-view/table-view.component.html","./src/app/trends/content/time-range-dilaogue/time-range-dilaogue.component.ts","./src/app/trends/content/time-range-dilaogue/time-range-dilaogue.component.html","./src/app/trends/content/trends-view.directive.ts","./src/app/trends/mock-trends.ts","./src/app/trends/side/side.component.ts","./src/app/trends/side/side.component.html","./src/app/trends/trends.component.ts","./src/app/trends/trends.component.html","./src/app/trends/trends.module.ts","./src/app/trends/trends.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.authenticationService.userValue;\r\n        if (user) {\r\n            // check if route is restricted by role\r\n            if (route.data.roles && route.data.roles.indexOf(user.role) === -1) {\r\n                // role not authorised so redirect to home page\r\n                this.router.navigate(['dashboard']);\r\n                return false;\r\n            }\r\n\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].indexOf(err.status) !== -1) {\r\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n                this.authenticationService.logout();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\r\n\r\nimport { Role } from '../_models';\r\nimport { environment } from '@environments/environment';\r\n\r\nconst users = [\r\n    { id: 1, username: 'admin', password: 'admin', firstName: 'Admin', lastName: 'User', role: Role.Admin },\r\n    { id: 2, username: 'user', password: 'user', firstName: 'Normal', lastName: 'User', role: Role.User }\r\n];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        if(environment.production)\r\n            return next.handle(request);\r\n        else\r\n            return handleRoute();        \r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/auth') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }\r\n\r\n        }\r\n\r\n        // route functions\r\n\r\n        function authenticate() {\r\n            const { email, password } = body;\r\n            const user = users.find(x => x.username === email && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                id: user.id,\r\n                username: user.username,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                role: user.role,\r\n                token: `fake-jwt-token.${user.id}`\r\n            });\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isAdmin()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            // only admins can access other user records\r\n            if (!isAdmin() && currentUser().id !== idFromUrl()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n                .pipe(delay(500)); // delay observable to simulate server api call\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'unauthorized' } })\r\n                .pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648);\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ status: 400, error: { message } })\r\n                .pipe(materialize(), delay(500), dematerialize());\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            const authHeader = headers.get('Authorization') || '';\r\n            return authHeader.startsWith('Bearer fake-jwt-token');\r\n        }\r\n\r\n        function isAdmin() {\r\n            return isLoggedIn() && currentUser().role === Role.Admin;\r\n        }\r\n\r\n        function currentUser() {\r\n            if (!isLoggedIn()) return;\r\n            const id = parseInt(headers.get('Authorization').split('.')[1]);\r\n            return users.find(x => x.id === id);\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","export * from './auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './fake-backend';\r\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to api url\r\n        const user = this.authenticationService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.authUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export * from './role';\r\nexport * from './user';","export enum Role {\r\n    User = 'User',\r\n    Admin = 'Admin'\r\n}","import { Role } from \"./role\";\r\n\r\nexport class User {\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    username: string;\r\n    role: Role;\r\n    token?: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient\r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    login(email: string, password: string) {\r\n        return this.http.post<any>(`${environment.authUrl}/auth`, { email, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                this.userSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    signup(firstName:string,lastName:string,address:string,email: string, password: string) {\r\n        var endpoint=`${environment.authUrl}/api/users`;\r\n        var permissionLevel=1;\r\n        return this.http.post<any>(endpoint, { email, firstName,lastName,password ,permissionLevel});\r\n    }\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('user');\r\n        this.userSubject.next(null);\r\n        this.router.navigate(['/login']);\r\n    }\r\n}","export * from './authentication.service';\r\nexport * from './user.service';","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.api}/users`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get<User>(`${environment.api}/users/${id}`);\r\n    }\r\n}","import { NgModule } from  '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n \r\nimport {MatButtonModule} from  '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from  '@angular/material/toolbar';\r\n\r\n \r\n@NgModule({\r\nimports: [\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n\r\n    MatNativeDateModule,\r\n    //MatDatepickerModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule, \r\n    MatToolbarModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatRadioModule \r\n],\r\nexports: [\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n\r\n\r\n    MatNativeDateModule,\r\n    //MatDatepickerModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule, \r\n    MatToolbarModule,\r\n    FormsModule,\r\n     MatCardModule,\r\n     MatFormFieldModule,\r\n     MatInputModule,\r\n     MatListModule,\r\n     MatRadioModule \r\n],\r\n \r\n})\r\n \r\nexport  class  MaterialModule { }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nimport { FirstPageComponent } from './first-page/first-page.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './login/registration/registration.component';\r\nimport { ManagementModule } from './management/management.module';\r\nimport { MonitoredComponent } from './monitored/monitored.component';\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\nimport { Role } from './_models';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: LoginComponent},\r\n    { path: 'first-page', component: FirstPageComponent,canActivate: [AuthGuard],data: { roles: [Role.Admin] }},\r\n    { path: 'monitored-units', component: MonitoredComponent },\r\n    // { path: 'dashboard', component: DashboardComponent,canActivate: [AuthGuard], data: { roles: [Role.Admin]} },\r\n    { path: 'dashboard', component: DashboardComponent,canActivate: [AuthGuard]},\r\n    { path: 'management', component: ManagementModule ,canActivate: [AuthGuard]},\r\n    { path: 'registration', component: RegistrationComponent }\r\n    //{ path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  //{ path: '**', component: PageNotFoundComponent },  // Wildcard route for a 404 page\r\n\r\n];\r\n@NgModule({\r\nimports: [RouterModule.forRoot(routes)],\r\nexports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n  title = 'uiSPA';\r\n  Creator='M.Reza Hajjar';\r\n}\r\n","<app-nav-menu></app-nav-menu>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule , CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { FirstPageComponent } from './first-page/first-page.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SummaryComponent } from './dashboard/mainpanel/summary/summary.component';\r\nimport { PowerGraphComponent } from './dashboard/mainpanel/power-graph/power-graph.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { CardComponent } from './dashboard/mainpanel/card/card.component';\r\nimport { StateChartComponent } from './dashboard/mainpanel/state-chart/state-chart.component';\r\nimport { ProgressBarComponent } from './dashboard/mainpanel/power-graph/progress-bar/progress-bar.component';\r\nimport { CommentsComponent } from './dashboard/mainpanel/comments/comments.component';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { ServicesComponent } from './dashboard/mainpanel/services/services.component';\r\nimport { AlarmsComponent } from './dashboard/mainpanel/alarms/alarms.component';\r\nimport { MainpanelComponent } from './dashboard/mainpanel/mainpanel.component';\r\nimport { SidepanelComponent } from './sidepanel/sidepanel.component';\r\nimport { GroupsComponent } from './sidepanel/groups/groups.component';\r\n\r\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\r\n\r\n\r\n\r\nimport { ManagementModule } from  './management/management.module';\r\nimport { TrendsModule } from  './trends/trends.module';\r\nimport { MonitoredComponent } from './monitored/monitored.component';\r\nimport { MapComponent } from './monitored/map/map.component';\r\nimport { ContentComponent } from './monitored/content/content.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { TableviewComponent } from './monitored/content/tableview/tableview.component';\r\nimport { IconviewComponent } from './monitored/content/iconview/iconview.component';\r\nimport { ModuleviewComponent } from './monitored/content/moduleview/moduleview.component';\r\nimport { ViewUnitsDirective } from './monitored/content/view-units.directive';\r\nimport{SideComponent} from './monitored/side/side.component';\r\nimport { MinidetailsComponent } from './monitored/side/minidetails/minidetails.component';\r\nimport { FilterComponent } from './monitored/side/filter/filter.component'\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\r\nimport{    MaterialModule} from './app-material.module'\r\n\r\n\r\n// used to create fake backend\r\nimport { fakeBackendProvider } from './_helpers';\r\nimport { RegistrationComponent } from './login/registration/registration.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    FirstPageComponent,\r\n    SummaryComponent,\r\n    DashboardComponent,\r\n    PowerGraphComponent,\r\n    CardComponent,\r\n    StateChartComponent,\r\n    ProgressBarComponent,\r\n    CommentsComponent,\r\n    ServicesComponent,\r\n    AlarmsComponent,\r\n    MainpanelComponent,\r\n    SidepanelComponent,\r\n    GroupsComponent,\r\n    MonitoredComponent,\r\n    MapComponent,\r\n    ContentComponent,\r\n    TableviewComponent,\r\n    IconviewComponent,\r\n    ModuleviewComponent,\r\n    SideComponent,\r\n    ViewUnitsDirective,\r\n    MinidetailsComponent,\r\n    FilterComponent,\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    \r\n    ChartsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    ManagementModule,\r\n    TrendsModule,\r\n    LeafletModule,\r\n    MatFormFieldModule,\r\n    MaterialModule\r\n      ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n\r\n    fakeBackendProvider\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","\n  import { Component } from '@angular/core';\n  \n  \n  @Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n  })\n  export class DashboardComponent {\n   \n  \n  }","<mat-sidenav-container class=\"example-container\">\r\n  <mat-sidenav #sidenav mode=\"side\" opened=true>\r\n    <app-sidepanel></app-sidepanel>\r\n  </mat-sidenav>\r\n  \r\n  <mat-sidenav-content>\r\n    <div class=\"grid-container\">    \r\n        <mat-toolbar>\r\n         <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n          <mat-icon>list</mat-icon>\r\n        </button>\r\n        <span>Dashboarddd</span>-\r\n        <span>All</span>\r\n      </mat-toolbar>     \r\n      <app-mainpanel></app-mainpanel>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { AlarmsItem } from './alarms-datasource';\n\n@Component({\n  selector: 'app-alarms',\n  templateUrl: './alarms.component.html',\n  styleUrls: ['./alarms.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class AlarmsComponent implements  OnInit {\n \n  dataSource = ELEMENT_DATA;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<AlarmsItem>;\n \n\n  columnsToDisplay = ['unitname','alarms'];\n  expandedElement: PeriodicElement | null;\n\n \n\n  ngOnInit() {\n    this.dataSource = ELEMENT_DATA;\n  }\n\n \n}\n\nexport interface PeriodicElement {\n  alarms:{name:string , Icon:string}[];\n  unitname: string;\n}\n\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    unitname: 'unit 1',\n    alarms:[\n      {name:'*WrnServiceTime',Icon:'sutdown'},{name:'*Emergency stop', Icon:'Sensor'}\n    ]\n  },\n  {\n    unitname: 'unit 2',\n    alarms:[\n          {name:'*WrnServiceTime',Icon:'alarm'},{name:'*Emergency stop', Icon:'warning'}\n        ]\n  },\n  {\n    unitname: 'unit 3',\n    alarms:[\n          {name:'*WrnServiceTime',Icon:'alarm'},{name:'*Dongle Incomp', Icon:'warning'},\n          {name:'*WrnServiceTime',Icon:'ECU'},\n        ]\n  },\n  {\n    unitname: 'unit 4',\n    alarms:[\n          {name:'*WrnServiceTime',Icon:'sutdown'},{name:'*Emergency stop', Icon:'warning'}\n        ]\n  },\n  {\n    unitname: 'unit 5',\n    alarms:[\n          {name:'*WrnServiceTime',Icon:'alarm'},{name:'*Emergency stop', Icon:'sutdown'}\n        ]\n  },\n  {\n    unitname: 'unit 6',\n    alarms:[\n          {name:'*WrnServiceTime',Icon:'warning'},{name:'*Emergency stop', Icon:'warning'}\n        ]\n  },\n  {\n    unitname: 'unit 7',\n    alarms:[\n          {name:'*WrnServiceTime',Icon:'alarm'},{name:'*Emergency stop', Icon:'warning'}\n        ]\n  },\n     {\n    unitname: 'unit 8',\n    alarms:[\n          {name:'*WrnServiceTime',Icon:'alarm'},{name:'*Emergency stop', Icon:'warning'}\n        ]\n  },\n  // {\n  //   position: 4,\n  //   name: 'Beryllium',\n  //   weight: 9.0122,\n  //   symbol: 'Be',\n  //   description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\n  //       relatively rare element in the universe, usually occurring as a product of the spallation of\n  //       larger atomic nuclei that have collided with cosmic rays.`\n  // }, {\n  //   position: 5,\n  //   name: 'Boron',\n  //   weight: 10.811,\n  //   symbol: 'B',\n  //   description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\n  //       by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\n  //       low-abundance element in the Solar system and in the Earth's crust.`\n  // }, {\n  //   position: 6,\n  //   name: 'Carbon',\n  //   weight: 12.0107,\n  //   symbol: 'C',\n  //   description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\n  //       and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\n  //       to group 14 of the periodic table.`\n  // }, {\n  //   position: 7,\n  //   name: 'Nitrogen',\n  //   weight: 14.0067,\n  //   symbol: 'N',\n  //   description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\n  //       discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\n  // }, {\n  //   position: 8,\n  //   name: 'Oxygen',\n  //   weight: 15.9994,\n  //   symbol: 'O',\n  //   description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\n  //        the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\n  //        agent that readily forms oxides with most elements as well as with other compounds.`\n  // }, {\n  //   position: 9,\n  //   name: 'Fluorine',\n  //   weight: 18.9984,\n  //   symbol: 'F',\n  //   description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\n  //       lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\n  //       conditions.`\n  // }, {\n  //   position: 10,\n  //   name: 'Neon',\n  //   weight: 20.1797,\n  //   symbol: 'Ne',\n  //   description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\n  //       Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\n  //       two-thirds the density of air.`\n  // },\n];\n","<table mat-table\r\n       [dataSource]=\"dataSource\" multiTemplateDataRows\r\n       class=\"mat-elevation-z8\">\r\n\r\n  <!-- <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\r\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n    <td class=\"name-column\" mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\r\n  </ng-container>   -->\r\n\r\n\r\n  \r\n  <!-- unitname Column -->\r\n  <ng-container matColumnDef=\"unitname\">\r\n    <th mat-header-cell *matHeaderCellDef></th>\r\n    <td class=\"name-column\" mat-cell *matCellDef=\"let element\"> {{element.unitname}} </td>\r\n  </ng-container>\r\n    \r\n  <!-- unitname Column -->\r\n    <ng-container matColumnDef=\"alarms\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td class=\"agreegated-alarms\" mat-cell *matCellDef=\"let element\">  \r\n        <div  *ngFor=\"let alarm of element.alarms\">\r\n          <span class=\"material-icons {{alarm.Icon}}\">warning</span>\r\n        </div>\r\n          <span class=\"material-icons closeIcon\">\r\n            close\r\n          </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Id Column -->\r\n    <!-- <ng-container matColumnDef=\"unitname\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Unit Name</th>\r\n      <td  class=\"left-align red-underline\" mat-cell *matCellDef=\"let row\">{{row.unitname}}</td>\r\n    </ng-container> -->\r\n<!-- \r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Comment</th>\r\n      <td class=\"left-align \"  mat-cell *matCellDef=\"let row\">{{row.name}} <fa-icon [icon]=\"filmIcon\"></fa-icon></td>\r\n    </ng-container> -->\r\n\r\n\r\n\r\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n  <ng-container matColumnDef=\"expandedDetail\">\r\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n      <div class=\"example-element-detail\"\r\n           [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n        <div>        \r\n            <div class=\"unit-alarmssss  {{alarm.Icon}}\" *ngFor=\"let alarm of element.alarms\">\r\n              <span id=\"detailIcon\" class=\"material-icons {{alarm.Icon}}\">warning</span>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <span id=\"detailIcon\" class=\"{{alarm.Icon}}\" >\r\n                {{alarm.name }}\r\n              </span>\r\n              \r\n            </div>          \r\n        </div>\r\n      </div>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\r\n      class=\"example-element-row\"\r\n      [class.example-expanded-row]=\"expandedElement === element\"\r\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n  </tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n</table>\r\n\r\n<span class=\"material-icons\">delete_forever</span><span>Clear All Alarms</span>","import { Component, OnInit ,Input} from '@angular/core'\n\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.sass']\n})\nexport class CardComponent implements OnInit {\n  constructor() { }\n  @Input() title: string;\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--card.component.html-->\n<mat-card class=\"dashboard-card\">\n    <mat-card-header>\n        <mat-card-title>\n            {{title}}\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button mat-menu-item>Expand</button>\n                <button mat-menu-item>Remove</button>\n            </mat-menu>\n        </mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"dashboard-card-content\">\n        <ng-content></ng-content>\n    </mat-card-content>\n </mat-card>","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface CommentsItem {\n  name: string;\n  id: string;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: CommentsItem[] = [\n  {id: 'unit1', name: 'Unit set to manual'},\n  {id: 'Unit2', name: 'Test planned for w12.'},\n  {id: 'Unit3', name: 'Unit restarted.'},\n  {id: 'Unit4', name: 'Beryllium'},\n  {id: 'Unit5', name: 'Checked. OK.'},\n  {id: 'Unit6', name: 'Test Comment'},\n  {id: 'Unit7', name: 'OK. Thankyou'},\n  {id: 'Unit8', name: 'add Comment'},\n];\n\n/**\n * Data source for the Comments view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class CommentsDataSource extends DataSource<CommentsItem> {\n  data: CommentsItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<CommentsItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: CommentsItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: CommentsItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { CommentsDataSource, CommentsItem } from './comments-datasource';\n\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<CommentsItem>;\n  dataSource: CommentsDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new CommentsDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8 small-table\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Unit Name</th>\n      <td  class=\"left-align red-underline\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Comment</th>\n      <td class=\"left-align \"  mat-cell *matCellDef=\"let row\">{{row.name}} <fa-icon [icon]=\"filmIcon\"></fa-icon></td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"50\"\n      [pageSizeOptions]=\"[25, 50, 100, 250]\">\n  </mat-paginator>\n</div>\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n@Component({\n  selector: 'app-mainpanel',\n  templateUrl: './mainpanel.component.html',\n  styleUrls: ['./mainpanel.component.css']\n})\nexport class MainpanelComponent  {\n\n    /** Based on the screen size, switch from standard to one column per row */\n    cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(({ matches }) => {\n        if (matches) {\n          return {\n            \n            columns: 1,\n            miniCard: { cols: 1, rows: 1 },\n            chart: { cols: 1, rows: 2 },\n            table: { cols: 1, rows: 4 },\n          };\n        }\n   \n       return {\n        columns: 3,\n          summery:{title: 'statistic summery',cols: 2, rows: 1},\n          alarm: { title: 'Alarms', cols: 1, rows: 3 },\n          power:{ title: 'Active Power Output', cols: 1, rows: 1 },\n          service:{ title: 'Service Time Filter', cols: 1, rows: 1 },\n          comments: { title: 'Active Comments', cols: 1, rows: 1 },\n          state:{ title: 'Engin State', cols: 1, rows: 1 },\n          miniCard: { cols: 1, rows: 1 },\n          chart: { cols: 2, rows: 2 },\n          table: { cols: 4, rows: 4 },\n        };\n      })\n    );\n    \n    /** Based on the screen size, switch from standard to one column per row */\n    cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(({ matches }) => {\n        if (matches) {\n          return [\n            { title: 'Card 1', cols: 2, rows: 1 },\n            { title: 'Card 4', cols: 1, rows: 3 },\n            { title: 'Card 2', cols: 1, rows: 1 },\n            { title: 'Card 3', cols: 1, rows: 1 },\n            { title: 'Card 5', cols: 1, rows: 1 },\n            { title: 'Card 6', cols: 1, rows: 1 },\n          ];\n        }\n  \n        return [\n          { title: 'statistic summery', cols: 2, rows: 1 },\n          { title: 'Alarms', cols: 1, rows: 3 },\n          { title: 'Active Power Output', cols: 1, rows: 1 },\n          { title: 'Service Time Filter', cols: 1, rows: 1 },\n          { title: 'Active Comments', cols: 1, rows: 1 },\n          { title: 'Engin State', cols: 1, rows: 1 },\n        ];\n      })\n    );\n  \n    constructor(private breakpointObserver: BreakpointObserver) {}\n  }\n  ","\r\n    <mat-grid-list cols=\"{{ ( cardLayout | async )?.columns }}\" rowHeight=\"300px\">\r\n        <!--Summary-->\r\n        <mat-grid-tile *ngFor=\"let i of [1]\" [colspan]=\"( cardLayout | async )?.summery.cols\"\r\n        [rowspan]=\"( cardLayout | async )?.summery.rows\">\r\n        <mat-card-content  class=\"summeryPanel\">\r\n            <dashboard-summary></dashboard-summary>\r\n        </mat-card-content>\r\n        </mat-grid-tile>\r\n      \r\n        <!--Alarm-->\r\n        <mat-grid-tile  [colspan]=\"( cardLayout | async )?.alarm.cols\"\r\n        [rowspan]=\"( cardLayout | async )?.alarm.rows\">\r\n        <app-card [title]=\"( cardLayout | async )?.alarm.title\"><app-alarms></app-alarms></app-card>\r\n        </mat-grid-tile>\r\n  \r\n        <!--power-->\r\n        <mat-grid-tile  [colspan]=\"( cardLayout | async )?.power.cols\"\r\n        [rowspan]=\"( cardLayout | async )?.power.rows\">\r\n        <app-card [title]=\"( cardLayout | async )?.power.title\"><app-power-graph></app-power-graph></app-card>\r\n        </mat-grid-tile>\r\n  \r\n        <!--Service-->\r\n        <mat-grid-tile  [colspan]=\"( cardLayout | async )?.service.cols\"\r\n        [rowspan]=\"( cardLayout | async )?.service.rows\">\r\n        <app-card [title]=\"( cardLayout | async )?.service.title\"><app-services></app-services></app-card>\r\n        </mat-grid-tile>    \r\n        \r\n        <!--comments-->\r\n        <mat-grid-tile [colspan]=\"( cardLayout | async )?.comments.cols\"\r\n        [rowspan]=\"( cardLayout | async )?.comments.rows\">\r\n        <app-card [title]=\"( cardLayout | async )?.comments.title\"><app-comments></app-comments></app-card>\r\n        </mat-grid-tile> \r\n  \r\n        <!--state-->\r\n        <mat-grid-tile  [colspan]=\"( cardLayout | async )?.state.cols\"\r\n        [rowspan]=\"( cardLayout | async )?.state.rows\">\r\n        <app-card [title]=\"( cardLayout | async )?.state.title\"><app-state-chart></app-state-chart></app-card>\r\n        </mat-grid-tile>        \r\n      \r\n    </mat-grid-list>\r\n   ","import { Component, OnInit } from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-power-graph',\r\n  templateUrl: './power-graph.component.html',\r\n  styleUrls: ['./power-graph.component.sass']\r\n})\r\nexport class PowerGraphComponent implements OnInit {\r\n  constructor() { }\r\n  unitPower=[\r\n    {unitName: 'unit 1',power: 33},\r\n    {unitName: 'unit 2',power: 66},\r\n    {unitName: 'unit 3',power: 0},\r\n    {unitName: 'unit 4',power: 33},\r\n    {unitName: 'unit 5',power: 80},\r\n    {unitName: 'unit 6',power: 50},\r\n    {unitName: 'unit 7',power: 50},\r\n    {unitName: 'unit 8',power: 0}, \r\n    {unitName: 'unit 9',power: 47},\r\n    {unitName: 'unit 10',power: 90},\r\n  ];\r\n\r\n  \r\n  ngOnInit(): void {\r\n   \r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n<table >\r\n    <tr>\r\n        <th class=\"Names-culomn title\">Unit Names</th>\r\n        <th class=\"progress-culomn title\">Progress</th>        \r\n      </tr>\r\n        \r\n    <tr *ngFor=\"let item of unitPower\">\r\n        <td class=\"title\">\r\n            {{item .unitName}}\r\n        </td>\r\n        <td>\r\n           <app-progress-bar [progress]=item.power [total]=100></app-progress-bar>\r\n        </td>\r\n    </tr>\r\n                \r\n\r\n\r\n    \r\n</table>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit ,Input} from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.sass']\n})\nexport class ProgressBarComponent implements OnInit {\n    @Input() progress: number;\n    @Input() total: number;\n    color: string;\n    constructor() { }\n    ngOnInit() {\n      //if we don't have progress, set it to 0.\n      if(!this.progress) {\n         this.progress = 0;\n      }\n      //if we don't have a total aka no requirement, it's 100%.\n      if(this.total === 0) {\n         this.total = this.progress;\n      } else if(!this.total) {\n         this.total = 100;\n      }\n      //if the progress is greater than the total, it's also 100%.\n      if(this.progress > this.total) {\n         this.progress = 100;\n         this.total = 100;\n      }\n      this.progress = (this.progress / this.total) * 100;\n      if(this.progress < 55) {\n         this.color = 'red';\n      } else if(this.progress < 75) {\n         this.color= 'yellow';\n      } else {\n        this.color = 'green';\n      }\n     }\n    }","<div class=\"progress-bar-container\">\n    <div class=\"progress-bar {{color}}\" \n    [ngStyle]=\"{'width': progress + '%'}\">\n   </div>\n</div>\n<div class=title> {{progress}} %</div>","import {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ServicesItem {\n  id: string;\n  name: string;\n  counter: number;\n\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ServicesItem[] = [\n  {id: 'unit 1', name: 'Maintenance 1' , counter: 0   },\n  {id: 'unit 2', name: 'Maintenance 1' , counter: 276 },\n  {id: 'unit 3', name: 'Service Time 1', counter: 300 },\n  {id: 'unit 4', name: 'Maintenance 1' , counter: 300 },\n  {id: 'unit 4', name: 'Maintenance 1' , counter: 300 },\n \n];\n\n/**\n * Data source for the Services view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ServicesDataSource extends  MatTableDataSource<ServicesItem> {\n  data: ServicesItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n\n\n  constructor() {\n    super();\n  }\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ServicesItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ServicesItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ServicesDataSource, ServicesItem } from './services-datasource';\n\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.css']\n})\nexport class ServicesComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ServicesItem>;\n  dataSource: ServicesDataSource;\n  sevicefilterIndx:number=0;\n  \n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name','counter'];\n\n  ngOnInit() {\n    this.dataSource = new ServicesDataSource();\n\n    this.dataSource.filterPredicate = \n    (data: ServicesItem, filter: string) => data.counter> parseInt(filter);\n  \n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n\n  public doFilter = (value: string) => {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  public applyFilter = (value: string) => {   \n    this.dataSource.filter = value.trim().toLocaleLowerCase();    \n  }\n\n  onClickMe(value: string) {\n    //this.sevicefilterIndx=value;\n    this.doFilter(value);\n  }\n}\n","<div id=\"main\">\r\n  <button  id=\"serv1\"  (click)=\"onClickMe('0')\" ><p>≤ 24 h</p><p><b>1</b></p></button>\r\n  <button  id=\"serv2\" (click)=\"onClickMe('250')\"><p>24-299 h </p><p><b>1</b></p></button>\r\n  <button  id=\"serv3\" (click)=\"onClickMe('300')\"><p>300-599 h</p><p><b>3</b></p></button>\r\n  <button  id=\"serv4\" (click)=\"onClickMe('600')\"><p>600-999 h</p><p><b>1</b></p></button>\r\n</div>\r\n<div class=\"mat-elevation-z8 small-table\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column --> \r\n    <ng-container matColumnDef=\"id\">\r\n      <th  *matHeaderCellDef>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th  *matHeaderCellDef>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\r\n    </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"counter\">\r\n          <th  *matHeaderCellDef>counter</th>\r\n          <td mat-cell *matCellDef=\"let row\" class=\"RightAlign\">{{row.counter}}h</td>\r\n        </ng-container>\r\n\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n<!-- \r\n  <mat-paginator #paginator\r\n      [length]=\"dataSource?.data.length\"\r\n      [pageIndex]=\"0\"\r\n      [pageSize]=\"50\"\r\n      [pageSizeOptions]=\"[25, 50, 100, 250]\">\r\n  </mat-paginator> -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-state-chart',\n  templateUrl: './state-chart.component.html',\n  styleUrls: ['./state-chart.component.sass']\n})\nexport class StateChartComponent implements OnInit {\n\n  public barChartOptions: ChartOptions = {\n    responsive: true, \n  };\n  public barChartLabels: Label[] = ['Ready', 'Running ', 'Loaded', 'Stop', 'Init', 'Shout down', 'NotReady','EmergMan'];\n  public barChartType: ChartType = 'horizontalBar';\n  public barChartLegend = false;\n  public barChartPlugins = [];  \n\n  public barChartData: ChartDataSets[] = [\n    { data: [2,1,1,2,0,0,15], label: 'Series B' ,backgroundColor :'Teal' }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"chartContainer\">\n  <canvas baseChart\n    [datasets]=\"barChartData\"\n    [labels]=\"barChartLabels\"\n    [options]=\"barChartOptions\"\n    [plugins]=\"barChartPlugins\"\n    [legend]=\"barChartLegend\"\n    [chartType]=\"barChartType\"\n    >\n  </canvas>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n}\n\n@Component({\n  selector: 'dashboard-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.css']\n})\nexport class SummaryComponent implements OnInit {\n  tiles: Tile[] = [\n    {text: 'One', cols:1 , rows: 1, color: 'lightblue'},\n    {text: 'One', cols:1 , rows: 1, color: 'lightblue'}\n      \n    ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","   <div class=\"container\">\n    <div class=\"row1 single-value Online      \"><span class=\"cut\">Online        </span> <span class=\"value\">15</span></div>\n    <div class=\"row1 single-value Offline     \"><span class=\"cut\">Offline       </span> <span class=\"value\">6 </span></div>\n    <div class=\"row1 single-value Total       \"><span class=\"cut\">Total         </span> <span class=\"value\">21</span></div>\n    <div class=\"row1 single-value InAlarm     \"><span class=\"cut\">In Alarm      </span> <span class=\"value\">27</span></div>\n    <div class=\"row1 single-value ToService   \"><span class=\"cut\">No Airgate    </span> <span class=\"value\">5 </span></div>  \n    <div class=\"row1 single-value ToService   \"><span class=\"cut\">24h to service</span> <span class=\"value\">5 </span></div>  \n    <div class=\"row1 single-value ToService   \"><span class=\"cut\">Eng. \"Loaded\" </span> <span class=\"value\">5 </span></div>  \n</div>\n\n\n\n\n<div class=\"container\">\n    <div class=\"row2\"><span class=\"material-icons Sutdown\">warning</span><span class=\"title\">Sutdown</span><span class=\"value\"><b>4</b></span></div>\n    <div class=\"row2\"><span class=\"material-icons Alarm  \">warning</span><span class=\"title\">Alarm  </span><span class=\"value\"><b>0</b></span></div>\n    <div class=\"row2\"><span class=\"material-icons Warnig \">warning</span><span class=\"title\">Warnig </span><span class=\"value\"><b>1</b></span></div>\n  </div> \n\n\n\n\n  <div class=\"container\">\n    <div class=\"row3\"><span class=\"material-icons ECU      \">warning</span>        <span class=\"title\">  ECU        </span><span class=\"value\"><b>0</b></span></div>\n    <div class=\"row3\"><span class=\"material-icons Sensor   \">warning</span>        <span class=\"title\">   Sensor Fail</span><span class=\"value\"><b>0</b></span></div>\n    <div class=\"row3\"><span class=\"material-icons NoCom    \">cancel</span>         <span class=\"title\">   No Com     </span><span class=\"value\"><b>17</b></span></div>\n    <div class=\"row3\"><span class=\"material-icons Disabled \">not_interested</span> <span class=\"title\">   Disabled   </span><span class=\"value\"><b>4</b></span></div>\n\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-first-page',\r\n  templateUrl: './first-page.component.html',\r\n  styleUrls: ['./first-page.component.sass']\r\n})\r\nexport class FirstPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  pageHeader: string = ' Device Statistics - Summary';\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"header\">\r\n        <h1>Tutorial Republic</h1>\r\n    </div>\r\n    <div class=\"wrapper clearfix\">\r\n        <div class=\"nav\">\r\n            <ul>\r\n                \r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><a href=\"#\">About</a></li>\r\n                <li><a href=\"#\">Contact</a></li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"section\">\r\n            <h2>Welcome to our site</h2>\r\n            <p>Here you will learn how to create websites...</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"footer\">\r\n        <p>copyright &copy; tutorialrepublic.com</p>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  hide = true;\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  error = '';\r\n\r\n  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n    ) { }\r\n    \r\n    email = new FormControl('', [Validators.required, Validators.email]);\r\n    password = new FormControl('', [Validators.required]);\r\n  ngOnInit(): void {\r\n      this.loginForm = this.formBuilder.group({\r\n        email:this.email,\r\n        password: this.password\r\n    });\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n      onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.loginForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.authenticationService.login(this.email.value, this.password.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    // get return url from query parameters or default to home page\r\n                    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\r\n                    this.router.navigateByUrl(returnUrl);\r\n                    this.loading = false;\r\n                },\r\n                error: error => {\r\n                    this.error = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}\r\n","<mat-card class=\"my-card\">\r\n    <mat-card-title>\r\n        Login<br />\r\n\r\n    </mat-card-title>\r\n     <mat-card-content>\r\n        <form [formGroup]=\"loginForm\"  class=\"my-form\">\r\n\r\n           <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n            <mat-label>Enter your email</mat-label>\r\n            <input matInput placeholder=\"pat@example.com\" [formControl]=\"email\" required>\r\n            <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n          </mat-form-field>\r\n\r\n           <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n            <mat-label>Enter your password</mat-label>\r\n            <input matInput [type]=\"hide ? 'password' : 'text'\"  formControlName=\"password\">\r\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n\r\n        </form>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n        <button mat-flat-button  [disabled]=\"loading\" (click)=\"onSubmit()\">Login</button>\r\n    </mat-card-actions>\r\n    <li>Normal User: - U: user P: user</li>\r\n     <li>Administrator- U: admin P: admin</li> \r\n     <span >Don't have an account</span><a  mat-button routerLink=\"/registration\" > Sign up</a>\r\n\r\n</mat-card>\r\n\r\n\r\n<!-- <form [formGroup]=\"loginForm\">\r\n\r\n    <button class=\"button\" type=\"submit\">Purchase</button>\r\n  \r\n  </form> -->\r\n<!-- \r\n<div class=\"col-md-6 offset-md-3 mt-5\">\r\n\r\n    <div class=\"card\">\r\n        <h4 class=\"card-header\">Angular 10 Role Based Auth Example</h4>\r\n        <div class=\"card-body\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    </div>\r\n                </div>\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Login\r\n                </button>\r\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>             -->","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../../_services';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  hide = true;\r\n\r\n  signupForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  error = '';\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.signupForm = this.formBuilder.group({\r\n      email:this.email,\r\n      password: ['', Validators.required],\r\n      address: [''],\r\n      firstName: [''],\r\n      lastName: [''],\r\n\r\n  });\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n// convenience getter for easy access to form fields\r\nget f() { return this.signupForm.controls; }\r\n\r\nonSubmit() {\r\n  this.submitted = true;\r\n\r\n  // stop here if form is invalid\r\n  if (this.signupForm.invalid) {\r\n      return;\r\n  }\r\n\r\n  this.loading = true;\r\n  this.authenticationService.signup(\r\n    this.f.firstName.value,\r\n    this.f.lastName.value,\r\n    this.f.address.value,\r\n    this.f.email.value, \r\n    this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe({\r\n          next: () => {\r\n              // get return url from query parameters or default to home page\r\n              const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\r\n              this.router.navigateByUrl('/login');\r\n              this.loading = false;\r\n          },\r\n          error: error => {\r\n              this.error = error;\r\n              this.loading = false;\r\n          }\r\n      });\r\n}\r\n\r\n}\r\n","<mat-card class=\"my-card\">\r\n   <mat-card-title>\r\n      Registration\r\n   </mat-card-title>\r\n\r\n    <mat-card-content>\r\n        <form [formGroup]=\"signupForm\" class=\"my-form\">\r\n             <mat-form-field class=\"full-width\">\r\n                   <mat-label>First Name</mat-label>\r\n                   <input  matInput  placeholder=\"First name\"  formControlName=\"firstName\"  required>\r\n             </mat-form-field>\r\n                <mat-form-field class=\"full-width\">\r\n                   <mat-label>Last Name</mat-label>\r\n                   <input  matInput  placeholder=\"Last Name\" formControlName=\"lastName\"  required>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"full-width\">\r\n                   <mat-label>Address</mat-label>\r\n                   <input  matInput  placeholder=\"Address\" formControlName=\"address\"  required>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n                  <mat-label>Enter your email</mat-label>\r\n                  <input matInput placeholder=\"pat@example.com\" [formControl]=\"email\" required>\r\n                  <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n                  <mat-label>Enter your password</mat-label>\r\n                  <input matInput [type]=\"hide ? 'password' : 'text'\"  formControlName=\"password\">\r\n                  <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                  <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </button>\r\n                </mat-form-field>\r\n         </form>\r\n       </mat-card-content>\r\n     \r\n       <mat-card-actions>\r\n         <button mat-flat-button  [disabled]=\"loading\" (click)=\"onSubmit()\">Register</button>\r\n      </mat-card-actions>\r\n  </mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-activity',\r\n  templateUrl: './activity.component.html',\r\n  styleUrls: ['./activity.component.sass']\r\n})\r\nexport class ActivityComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>activity works!</p>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nexport interface DialogData {\r\n  type: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dialog-body',\r\n  templateUrl: './dialog-body.component.html',\r\n  styleUrls: ['./dialog-body.component.css']\r\n})\r\nexport class DialogBodyComponent implements OnInit {\r\n  constructor( public dialogRef: MatDialogRef<DialogBodyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n  onYesClick(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n\r\n\r\n\r\n","<h2 mat-dialog-title> <p>{{data.type}} <b>\"{{data.name}}\"</b> will be deleted.</p></h2>\n\n<div mat-dialog-content>\n   \n    \n  </div>\n\n  <div mat-dialog-actions class=\"example-button-row\">\n    <button mat-raised-button (click)=\"onYesClick()\" color=\"warn\">Yes</button>\n    <button mat-raised-button  (click)=\"onNoClick()\" cdkFocusInitial color=\"warn\">No</button>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.sass']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<mat-sidenav-container class=\"example-container\">\n    <!-- <mat-sidenav #sidenav mode=\"side\" opened=true>\n     <h1>lists comes here</h1>\n    </mat-sidenav> -->\n    \n    <mat-sidenav-content>\n      <div class=\"grid-container\">    \n         <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>","import { NgModule } from  '@angular/core';\nimport { Routes, RouterModule } from  '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatRadioModule} from '@angular/material/radio';\n\n\n\n\n\n\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\n\n\n\nimport { EditComponent } from './edit.component';\n\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { GroupEditComponent } from './group-edit/group-edit.component';\nimport { UnitEditComponent } from './unit-edit/unit-edit.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { PermissionComponent } from './user-edit/permission/permission.component';\nimport { UnitPermissionComponent } from './unit-edit/permission/permission.component';\nimport { UnitgroupsComponent } from './unit-edit/groups/groups.component';\nimport { InformationComponent } from './unit-edit/information/information.component';\n\n\nconst  routes:  Routes  = [\n  {\n      path:  'management/edit',\n      component:  EditComponent,\n      children: [\n        {\n          path:  'user/:id',\n          component: UserEditComponent\n        },\n        {\n          path:  'user',\n          component: UserEditComponent\n        },\n        {\n          path:  'group/:id',\n          component: GroupEditComponent\n        },\n        {\n          path:  'group',\n          component: GroupEditComponent\n        },\n        {\n          path:  'unit/:id',\n          component: UnitEditComponent\n        },\n        {\n          path:  'unit',\n          component: UnitEditComponent\n        }\n      ]\n    }\n  ];\n\n\n\n@NgModule({\n  declarations: [\n    UserEditComponent,\n    EditComponent, \n    GroupEditComponent,\n     UnitEditComponent, \n     PermissionComponent,\n     UnitPermissionComponent,\n     UnitgroupsComponent,\n     InformationComponent,\n    ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatGridListModule,\n    MatRadioModule,\n    LeafletModule\n    \n  ],\n  exports: [RouterModule]\n})\nexport class EditModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { UnitsService } from '../../services/units.service';\nimport { Group } from '../../services/group';\nimport { Observable } from 'rxjs';\nimport { first, switchMap } from 'rxjs/operators';\nimport { GroupsService } from '../../services/groups.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DialogBodyComponent } from '@app/management/dialog-body/dialog-body.component';\n\n\nexport enum GroupType {\n  site= \"site\", \n  wecControl=\"wecControl\", \n  basic= \"basic\"\n}\nconst GROUPS=[\n  {type:GroupType.site, name: \"site\"},\n  {type:GroupType.wecControl, name: \"wecControl\"},\n  {type:GroupType.basic, name: \"basic\"},\n];\n\n\n@Component({\n  selector: 'app-group-edit',\n  templateUrl: './group-edit.component.html',\n  styleUrls: ['./group-edit.component.css']\n})\nexport class GroupEditComponent implements OnInit {\n  hide = true;\n  InfoForm :FormGroup ; \n  id: string;\n  isAddMode: boolean;\n  loading = false;\n  submitted = false;\n\n  groups=GROUPS\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    private DataService: GroupsService\n  ) {}\n    \n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.isAddMode = !this.id;\n    \n    this.InfoForm = this.formBuilder.group({\n       // title: ['', Validators.required],\n       name: ['', Validators.required],\n       groupType:[],\n\n      //  lastName: ['', Validators.required],\n      //   email: ['', [Validators.required, Validators.email]],\n      //   permissionLevel: [1, Validators.required],\n      //   password: ['123456', [Validators.minLength(6), this.isAddMode ? Validators.required : Validators.nullValidator]],\n      //  confirmPassword: ['', this.isAddMode ? Validators.required : Validators.nullValidator]\n    }, {\n      //  validator: MustMatch('password', 'confirmPassword')\n    });\n\n    if (!this.isAddMode) {\n        this.DataService.get(this.id)\n            .pipe(first())\n            .subscribe(x =>\n              {\n                console.log(x);\n                 this.InfoForm.patchValue(x);\n              }\n              );\n    }\n    }\n\n    gotoGroups() {\n      // Pass along the hero id if available\n      // so that the HeroList component can select that hero.\n      // Include a junk 'foo' property for fun.\n      this.router.navigate(['/management/groups']);\n    }\n   \n  resetForm() { \n    this.router.navigate(['/management/groups']);\n } \n  get f() { return this.InfoForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // reset alerts on submit\n      //this.alertService.clear();\n\n      // stop here if form is invalid\n      if (this.InfoForm.invalid) {\n          return;\n      }\n\n      this.loading = true;\n      if (this.isAddMode) {\n          this.create();\n      } else {\n          this.update();\n      }\n  }\n\n  private create() {\n      this.DataService.create(this.InfoForm.value)\n          .pipe(first())\n          .subscribe({\n              next: () => {\n                //  this.alertService.success('User added', { keepAfterRouteChange: true });\n                  this.router.navigate(['/management/groups'], { relativeTo: this.route });\n              },\n              error: error => {\n              //    this.alertService.error(error);\n                  this.loading = false;\n              }\n          });\n  }\n\n  private update() {\n      this.DataService.update(this.id, this.InfoForm.value)\n          .pipe(first())\n          .subscribe({\n              next: () => {\n             //     this.alertService.success('User updated', { keepAfterRouteChange: true });\n                  // this.router.navigate(['/management/users'], { relativeTo: this.route });\n                  this.router.navigate(['/management/groups']);\n              },\n              error: error => {\n              //    this.alertService.error(error);\n                  this.loading = false;\n              }\n          });\n  }\n  deleteUser(){\n\n    const dialogRef = this.dialog.open(DialogBodyComponent, {\n      width: '400px',\n      data: {name: this.InfoForm.value.name, type: \"group\"}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if(result){\n        this.DataService.delete(this.id).subscribe();\n                    //     this.alertService.success('User updated', { keepAfterRouteChange: true });\n                  // this.router.navigate(['/management/users'], { relativeTo: this.route });\n                  this.router.navigate(['/management/groups']);\n      } \n\n    });   \n  }\n}","<mat-toolbar class=\"secondary-toolbar\" >   \n  <button mat-icon-button >  <mat-icon>list</mat-icon></button>\n  <h1 class=\"submenu-title\">Group Setting  </h1>\n  <ng-template [ngIf]=\"!isAddMode\" >\n    <button   mat-flat-button color=\"warn\"  routerLink=\"/management/edit/group\"  >\n      <span class=\"material-icons\">perm_identity</span>Add New Group\n    </button >\n  </ng-template>\n</mat-toolbar>\n<!-- <h2>{{ user.firstName }}</h2> -->\n    <mat-accordion>\n     \n    <!-- اطلاعات شخصی کاربر -->\n      <mat-expansion-panel [expanded]=\"true\" >\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            <span class=\"material-icons \">\n              person_outlined\n              </span>\n            Group information\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n    <form [formGroup]=\"InfoForm\"  class=\"form\">\n      <mat-form-field class=\"form-element\" appearance=\"fill\">\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Enter first name\" formControlName=\"name\">\n      </mat-form-field>\n\n      <mat-form-field  appearance=\"fill\">\n        <mat-label>Choose Group Type*</mat-label>\n        <mat-select formControlName=\"groupType\">\n            <mat-option *ngFor=\"let group of groups\" [value]=\"group.type\" >{{group.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      </form>\n \n      </mat-expansion-panel>\n    \n    </mat-accordion>\n    \n    <!-- Copyright 2020 Google LLC. All Rights Reserved.\n        Use of this source code is governed by an MIT-style license that\n        can be found in the LICENSE file at http://angular.io/license -->\n        \n\n<mat-toolbar class=\"footing-toolbar\" >  \n  <ng-template [ngIf]=\"!isAddMode\" >\n    <button   mat-flat-button color=\"warn\"  (click)=\"deleteUser()\" class=\"btndelete\" >\n      <span class=\"material-icons\">delete_forever</span>Delete\n    </button > \n  </ng-template>\n  <button   mat-flat-button color=\"warn\" (click)=\"onSubmit()\"  >\n      <span class=\"material-icons\" >save</span>Save\n  </button >\n  \n  <button  type=\"button\" (click) = \"resetForm()\" mat-flat-button color=\"warn\">\n      <span class=\"material-icons\"  >restore</span>Cancel\n  </button >\n</mat-toolbar>\n\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserPermit } from 'src/app/management/services/user-permit';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Unit } from 'src/app/management/services/unit';\nimport { UsersPermitsService } from '../../../services/users-permits.service';\n\n\n@Component({\n  selector: 'unit-edit-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class UnitgroupsComponent implements OnInit {\n  myGroup :FormGroup ; \n  users:UserPermit[];\n  displayedColumns: string[] = ['select', 'name','actions'];\n  dataSource = new MatTableDataSource<UserPermit>(this.users);\n  selection = new SelectionModel<UserPermit>(true, []);\n  constructor(private UnitsPermitService: UsersPermitsService) { }\n\n  ngOnInit(): void {\n    \n\n    this.myGroup = new FormGroup({\n      name  :new FormControl(),  \n      sd  :new FormControl(true),  \n      allAlarm:new FormControl(true),\n      read    :new FormControl(true),  \n      control :new FormControl(true),\n      modify  :new FormControl(true),\n   });\n   this.retrieveUsers();\n\n  }\n  retrieveUsers(): void {\n    this.UnitsPermitService.getAll()\n      .subscribe(\n        data => {\n          this.users = data;\n          this.dataSource = new MatTableDataSource<UserPermit>(this.users);\n          this.selection = new SelectionModel<UserPermit>(true, []);\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n\n        \n  }\n  removeunit( user: UserPermit){\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: UserPermit): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}","<p class=\"title\">Add Unit to Group</p>\n          \n<form [formGroup]=\"myGroup\" class=\"addform\">            \n  <span  class=\"material-icons unit-logo\">\n       av_timer\n  </span>\n  <mat-form-field class=\"form-element\" appearance=\"fill\">\n    <mat-icon matPrefix>search</mat-icon>\n    <input matInput type=\"search\" \n    formControlName=\"name\"\n    placeholder=\"Enter existing Group name\" >\n  </mat-form-field>\n   <button  type=\"button\" class=\"add-button\" mat-flat-button color=\"warn\">\n    Add\n  </button >\n</form>\n<p>\n  <button  type=\"button\" class=\"new-group-button\" mat-flat-button color=\"warn\">\n    Ceate new group\n  </button >\n</p>\n\n<p class=\"title\">Manage Groups</p>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Checkbox Column -->\n  <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\"\n                    color=\"primary\">\n      </mat-checkbox>\n\n   \n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\" type=\"checkbox\"\n                    color=\"primary\">\n      </mat-checkbox>\n     \n    </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\">\n      {{element.name}} \n     </td>\n  </ng-container>\n\n <!-- actions Column -->\n <ng-container matColumnDef=\"actions\" stickyEnd>\n  <th mat-header-cell *matHeaderCellDef>Remove</th>\n  <td mat-cell *matCellDef=\"let element\" (click)=\"removeunit(element)\" class=\"delete_forever\">\n  <span class=\"material-icons\">close</span>\n  </td>\n</ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n  </tr>\n</table>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { icon, latLng, Map, marker, point, polyline, tileLayer } from 'leaflet';\r\nimport * as L from \"leaflet\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { first } from 'rxjs/operators';\r\nimport { UnitsService } from '@app/management/services/units.service';\r\nimport { DialogBodyComponent } from '@app/management/dialog-body/dialog-body.component';\r\n\r\nexport enum DeviceType {\r\n  mint= \"mint\", \r\n  amf25= \"amf25\", \r\n  teta= \"teta\"\r\n}\r\nconst DEVICES=[\r\n  {type:DeviceType.mint, name: \"Mint\"},\r\n  {type:DeviceType.amf25, name: \"AMF25\"},\r\n  {type:DeviceType.teta, name: \"Teta ECU\"},\r\n];\r\n\r\n\r\n@Component({\r\n  selector: 'unit-information',\r\n  templateUrl: './information.component.html',\r\n  styleUrls: ['./information.component.css']\r\n})\r\nexport class InformationComponent implements OnInit,AfterViewInit {\r\n  map:any;\r\n\r\n  hide = true;\r\n  unitInfoForm :FormGroup ; \r\n  id: string;\r\n  isAddMode: boolean;\r\n  loading = false;\r\n  submitted = false;\r\ndevices=DEVICES;\r\n  unitmarker;\r\n\r\n  @ViewChild('map') mapComntainer;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UnitsService,\r\n    public  dialog: MatDialog,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n  ngAfterViewInit(): void {\r\n    this.mapInit();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n\r\n    this.unitInfoForm = this.formBuilder.group({\r\n       // title: ['', Validators.required],\r\n       name: ['', Validators.required],\r\n       address: ['', Validators.required],\r\n       state: [false],\r\n        ip: ['', [Validators.required, Validators.pattern(\"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\")]],\r\n        port:['',Validators.compose([Validators.required, Validators.min(4511), Validators.max(4530)])],\r\n        deviceType:[],\r\n        lat: [\r\n          null,\r\n          [\r\n            Validators.maxLength(32),\r\n            Validators.min(-90),\r\n            Validators.max(90),\r\n            Validators.pattern(/\\-?\\d*\\.?\\d{1,2}/)\r\n          ]\r\n        ],\r\n        long: [\r\n          null,\r\n          [\r\n            Validators.maxLength(32),\r\n            Validators.min(-90),\r\n            Validators.max(90),\r\n            Validators.pattern(/\\-?\\d*\\.?\\d{1,2}/)\r\n          ]\r\n        ],\r\n    }, {\r\n      //  validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n\r\n    if (!this.isAddMode) {\r\n        this.userService.get(this.id)\r\n            .pipe(first())\r\n            .subscribe(x =>\r\n              {\r\n                console.log(x);\r\n                 this.unitInfoForm.patchValue(x);\r\n              }\r\n              );\r\n    }\r\n  }\r\n  mapInit()\r\n  {\r\n\r\n\r\n    this.map = L.map(this.mapComntainer.nativeElement);\r\n\r\n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n     { attribution: '...' }\r\n    ).addTo(this.map);\r\n\r\n    var marker1= L.marker([36.250091, 59.914066]);\r\n    var marker2= L.marker([36.250091, 52.914069]);\r\n\r\n    this.unitmarker= L.marker([36.250091, 52.914079]);;\r\n\r\n    this.unitmarker.addTo(this.map);\r\n    marker2.addTo(this.map);\r\n\r\n    \r\n    var group = new L.featureGroup([marker2,this.unitmarker]);\r\n    this.map.fitBounds(group.getBounds(),\r\n    {padding: [50, 50]});\r\n\r\n\r\n    this.unitmarker=marker1;\r\n\r\n\r\n    var group = new L.featureGroup([marker2,this.unitmarker]);\r\n    this.map.fitBounds(group.getBounds(),\r\n    {padding: [50, 50]});\r\n\r\n   // this.onMapReady(this.map) ;\r\n  }\r\n\r\n  onMapReady(map: L.Map) {\r\n    setTimeout(() => {\r\n      map.invalidateSize();\r\n    },1);\r\n }\r\n  resetForm() { \r\n    this.router.navigate(['/management/units']);\r\n } \r\n  get f() { return this.unitInfoForm.controls; }\r\n\r\n  onSubmit() {\r\n      this.submitted = true;\r\n\r\n      // reset alerts on submit\r\n      //this.alertService.clear();\r\n\r\n      // stop here if form is invalid\r\n      if (this.unitInfoForm.invalid) {\r\n          return;\r\n      }\r\n\r\n      this.loading = true;\r\n      if (this.isAddMode) {\r\n          this.create();\r\n      } else {\r\n          this.update();\r\n      }\r\n  }\r\n\r\n  private create() {\r\n      this.userService.create(this.unitInfoForm.value)\r\n          .pipe(first())\r\n          .subscribe({\r\n              next: () => {\r\n                //  this.alertService.success('User added', { keepAfterRouteChange: true });\r\n                  this.router.navigate(['/management/units'], { relativeTo: this.route });\r\n              },\r\n              error: error => {\r\n              //    this.alertService.error(error);\r\n                  this.loading = false;\r\n              }\r\n          });\r\n  }\r\n\r\n  private update() {\r\n      this.userService.update(this.id, this.unitInfoForm.value)\r\n          .pipe(first())\r\n          .subscribe({\r\n              next: () => {\r\n             //     this.alertService.success('User updated', { keepAfterRouteChange: true });\r\n                  // this.router.navigate(['/management/users'], { relativeTo: this.route });\r\n                  this.router.navigate(['/management/units']);\r\n              },\r\n              error: error => {\r\n              //    this.alertService.error(error);\r\n                  this.loading = false;\r\n              }\r\n          });\r\n  }\r\n  delete(){\r\n    const dialogRef = this.dialog.open(DialogBodyComponent, {\r\n      width: '400px',\r\n      data: {name: this.unitInfoForm.value.name, type: \"unit\"}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      if(result){\r\n        this.userService.delete(this.id).subscribe();\r\n                    //     this.alertService.success('User updated', { keepAfterRouteChange: true });\r\n                  // this.router.navigate(['/management/users'], { relativeTo: this.route });\r\n                  this.router.navigate(['/management/units']);\r\n      } \r\n\r\n    });   \r\n  }\r\n}\r\n","<mat-grid-list cols=\"2\"  rowHeight=\"100px\">\r\n    <!-- unitInfoForm -->\r\n    <form [formGroup]=\"unitInfoForm\"  class=\"form name-state\">\r\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"4\">\r\n            <div #map  id=\"map\"></div>\r\n        </mat-grid-tile>\r\n\r\n        <mat-grid-tile colspan=\"1\" rowspan=\"1\">\r\n                    <mat-form-field class=\"form-half-culomn\" appearance=\"fill\">\r\n                        <mat-label>Unit Name</mat-label>\r\n                        <input matInput placeholder=\"Enter name\" formControlName=\"name\" required>\r\n                    </mat-form-field>\r\n            \r\n                    <label>Unit State:&nbsp;&nbsp;&nbsp;</label>\r\n                    <mat-radio-group formControlName=\"state\">\r\n                        <mat-radio-button [value]=true>Enabled</mat-radio-button>\r\n                        <mat-radio-button [value]=false>Disabled</mat-radio-button>\r\n                    </mat-radio-group>\r\n        </mat-grid-tile>\r\n\r\n        <mat-grid-tile colspan=\"1\" rowspan=\"1\">\r\n            <mat-form-field class=\"form-culomn\" appearance=\"fill\">\r\n                <mat-label>Address</mat-label>\r\n                <input matInput placeholder=\"Enter position address\" formControlName=\"address\" required>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n\r\n\r\n        <!--NetworkData  -->\r\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\r\n            <mat-form-field class=\"form-culomn\" appearance=\"fill\">\r\n                <mat-label>Ip Address</mat-label>\r\n                <input matInput placeholder=\"Enter name\" formControlName=\"ip\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"form-culomn\" appearance=\"fill\">\r\n                <mat-label>Port</mat-label>\r\n                <input matInput placeholder=\"Enter port number 4511-4530\" formControlName=\"port\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field  appearance=\"fill\">\r\n                <mat-label>Choose Devivce Type*</mat-label>\r\n                <mat-select formControlName=\"deviceType\">\r\n                    <mat-option *ngFor=\"let device of devices\" [value]=\"device.type\" >{{device.name}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n\r\n        <!-- Geo Data -->\r\n        <mat-grid-tile  [colspan]=\"1\" [rowspan]=\"1\">\r\n            <mat-form-field  class=\"form-culomn\" appearance=\"fill\">\r\n                <mat-label>GPS Latitude (N)</mat-label>\r\n                <input type=\"number\" matInput placeholder=\"E.g. 45.44471\" formControlName=\"lat\" required>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field  class=\"form-culomn\" appearance=\"fill\">\r\n                <mat-label>GPS Longitude (E)</mat-label>\r\n                <input type=\"number\" matInput placeholder=\"E.g. 13.35937\" formControlName=\"long\" required>\r\n            </mat-form-field>\r\n        </mat-grid-tile>\r\n\r\n\r\n\r\n    </form>\r\n</mat-grid-list>\r\n<mat-toolbar class=\"footing-toolbar\" >  \r\n    <ng-template [ngIf]=\"!isAddMode\" >\r\n        <button   mat-flat-button color=\"warn\" class=\"btndelete\" >\r\n        <span class=\"material-icons\" (click)=\"delete()\" >delete_forever</span>Delete\r\n        </button > \r\n    </ng-template>\r\n    <button   mat-flat-button color=\"warn\" >\r\n        <span class=\"material-icons\" (click)=\"onSubmit()\" >save</span>Save\r\n    </button >\r\n    <button  type=\"button\" (click) = \"resetForm()\" mat-flat-button color=\"warn\">\r\n        <span class=\"material-icons\"  >restore</span>Cancel\r\n    </button >\r\n</mat-toolbar>\r\n  ","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserPermit } from 'src/app/management/services/user-permit';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Unit } from 'src/app/management/services/unit';\nimport { UsersPermitsService } from '../../../services/users-permits.service';\n\n\n@Component({\n  selector: 'unit-edit-permission',\n  templateUrl: './permission.component.html',\n  styleUrls: ['./permission.component.css']\n})\nexport class UnitPermissionComponent implements OnInit {\n  myGroup :FormGroup ; \n  users:UserPermit[];\n  displayedColumns: string[] = ['select', 'name','sd','allalarm','read','control','modify','actions'];\n  dataSource = new MatTableDataSource<UserPermit>(this.users);\n  selection = new SelectionModel<UserPermit>(true, []);\n  constructor(private UnitsPermitService: UsersPermitsService) { }\n\n  ngOnInit(): void {\n    \n\n    this.myGroup = new FormGroup({\n      name  :new FormControl(),  \n      sd  :new FormControl(true),  \n      allAlarm:new FormControl(true),\n      read    :new FormControl(true),  \n      control :new FormControl(true),\n      modify  :new FormControl(true),\n   });\n   this.retrieveUsers();\n\n  }\n  retrieveUsers(): void {\n    this.UnitsPermitService.getAll()\n      .subscribe(\n        data => {\n          this.users = data;\n          this.dataSource = new MatTableDataSource<UserPermit>(this.users);\n          this.selection = new SelectionModel<UserPermit>(true, []);\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n\n        \n  }\n  removeunit( user: UserPermit){\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: UserPermit): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}","<p class=\"title\">Add Unit to permission list</p>\n          \n<form [formGroup]=\"myGroup\" class=\"addform\">            \n  <span  class=\"material-icons unit-logo\">\n       av_timer\n  </span>\n  <mat-form-field class=\"form-element\" appearance=\"fill\">\n    <mat-icon matPrefix>search</mat-icon>\n    <input matInput type=\"search\" \n    formControlName=\"name\"\n    placeholder=\"Enter existing User name\" >\n  </mat-form-field>\n  <input type=\"checkbox\"  formControlName=\"sd\"         ><span class=\"checkbox_title\">Sd</span>\n  <input type=\"checkbox\"  formControlName=\"allAlarm\"   ><span class=\"checkbox_title\">allAlarm</span>\n  <input type=\"checkbox\"  formControlName=\"read\"       ><span class=\"checkbox_title\">Read</span>\n  <input type=\"checkbox\"  formControlName=\"control\"    ><span class=\"checkbox_title\">Control</span>\n  <input type=\"checkbox\"  formControlName=\"modify\"     ><span class=\"checkbox_title\">Modify</span>\n\n  <button  type=\"button\" class=\"add-button\" mat-flat-button color=\"warn\">\n    Add\n  </button >\n</form>\n<p class=\"title\">Manage Unit Permission</p>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Checkbox Column -->\n  <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\"\n                    color=\"primary\">\n      </mat-checkbox>\n\n   \n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\" type=\"checkbox\"\n                    color=\"primary\">\n      </mat-checkbox>\n     \n    </td>\n  </ng-container>\n\n  <!-- id Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> id\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} \n  </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\">\n      {{element.name}} \n     </td>\n  </ng-container>\n\n\n    <!-- sd Column -->\n    <ng-container matColumnDef=\"sd\">\n      <th mat-header-cell *matHeaderCellDef> Sd</th>\n      <td mat-cell *matCellDef=\"let element\">\n          <input type=\"checkbox\" [checked]=element.sd />\n         </td>\n    </ng-container>      \n\n    <!-- allalarm Column -->\n    <ng-container matColumnDef=\"allalarm\">\n      <th mat-header-cell *matHeaderCellDef> All alarm </th>\n      <td mat-cell *matCellDef=\"let element\">\n          <input type=\"checkbox\" [checked]=element.allalarm />\n\n          </td>\n    </ng-container>   \n\n    <!-- read Column -->\n    <ng-container matColumnDef=\"read\">\n      <th mat-header-cell *matHeaderCellDef> Read </th>\n      <td mat-cell *matCellDef=\"let element\">\n          <input type=\"checkbox\"  [checked]=element.read />\n          </td>\n    </ng-container> \n\n    <!-- control Column -->\n    <ng-container matColumnDef=\"control\">\n      <th mat-header-cell *matHeaderCellDef> Control </th>\n      <td mat-cell *matCellDef=\"let element\"  >\n          <input type=\"checkbox\" [checked]=element.control />\n\n          </td>\n    </ng-container> \n    <!-- modify Column -->\n    <ng-container matColumnDef=\"modify\">\n      <th mat-header-cell *matHeaderCellDef> Modify </th>\n      <td mat-cell *matCellDef=\"let element\"  >\n          <input type=\"checkbox\"    [checked]=element.modify />\n          </td>\n    </ng-container> \n <!-- actions Column -->\n <ng-container matColumnDef=\"actions\" stickyEnd>\n  <th mat-header-cell *matHeaderCellDef>Remove</th>\n  <td mat-cell *matCellDef=\"let element\" (click)=\"removeunit(element)\" class=\"delete_forever\">\n  <span class=\"material-icons\">close</span>\n  </td>\n</ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n  </tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { UnitsService } from '../../services/units.service';\nimport { Unit } from '../../services/unit';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n@Component({\n  selector: 'app-unit-edit',\n  templateUrl: './unit-edit.component.html',\n  styleUrls: ['./unit-edit.component.css']\n})\nexport class UnitEditComponent implements OnInit {\n  id: string;\n  isAddMode: boolean;\n   constructor(\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  \n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.isAddMode = !this.id;\n  }\n\n\n}\n","<mat-toolbar class=\"secondary-toolbar\" >   \n    <button mat-icon-button >  <mat-icon>list</mat-icon></button>\n    <h1 class=\"submenu-title\">Unit Setting  </h1>\n    <ng-template [ngIf]=\"!isAddMode\" >\n      <button   mat-flat-button color=\"warn\"  routerLink=\"/management/edit/unit\"  >\n        <span class=\"material-icons\">perm_identity</span>Add New Unit\n      </button >\n    </ng-template>\n  </mat-toolbar>\n        <mat-accordion>\n          <!-- Unit information -->\n          <mat-expansion-panel [expanded]=\"true\" >\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <span class=\"material-icons \">\n                  av_timer \n                  </span>\n                Unit Information\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <unit-information></unit-information>\n          </mat-expansion-panel>\n          <!-- Unit groups -->\n          <mat-expansion-panel [expanded]=\"false\" >\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <span class=\"material-icons \">\n                  library_add \n                  </span>\n                Unit Groups\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <unit-edit-groups></unit-edit-groups>\n          </mat-expansion-panel>\n          <!--Permissions -->\n          <mat-expansion-panel [expanded]=\"false\" >\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <span class=\"material-icons \">\n                  vpn_key_outlined\n                  </span>\n                Permissions\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <unit-edit-permission></unit-edit-permission>\n          </mat-expansion-panel>\n        \n        </mat-accordion>","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserPermit } from 'src/app/management/services/user-permit';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Unit } from 'src/app/management/services/unit';\nimport { UsersPermitsService } from '../../../services/users-permits.service';\n\n\n@Component({\n  selector: 'user-edit-permission',\n  templateUrl: './permission.component.html',\n  styleUrls: ['./permission.component.css']\n})\nexport class PermissionComponent implements OnInit {\n  myGroup :FormGroup ; \n  users:UserPermit[];\n  displayedColumns: string[] = ['select', 'name','sd','allalarm','read','control','modify','actions'];\n  dataSource = new MatTableDataSource<UserPermit>(this.users);\n  selection = new SelectionModel<UserPermit>(true, []);\n  constructor(private UnitsPermitService: UsersPermitsService) { }\n\n  ngOnInit(): void {\n    \n\n    this.myGroup = new FormGroup({\n      name  :new FormControl(),  \n      sd  :new FormControl(true),  \n      allAlarm:new FormControl(true),\n      read    :new FormControl(true),  \n      control :new FormControl(true),\n      modify  :new FormControl(true),\n   });\n   this.retrieveUsers();\n\n  }\n  retrieveUsers(): void {\n    this.UnitsPermitService.getAll()\n      .subscribe(\n        data => {\n          this.users = data;\n          this.dataSource = new MatTableDataSource<UserPermit>(this.users);\n          this.selection = new SelectionModel<UserPermit>(true, []);\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n\n        \n  }\n  removeunit( user: UserPermit){\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: UserPermit): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}","<p class=\"title\">Add Unit to permission list</p>\n          \n<form [formGroup]=\"myGroup\" class=\"addform\">            \n  <span  class=\"material-icons unit-logo\">\n       av_timer\n  </span>\n  <mat-form-field class=\"form-element\" appearance=\"fill\">\n    <mat-icon matPrefix>search</mat-icon>\n    <input matInput type=\"search\" \n    formControlName=\"name\"\n    placeholder=\"Enter existing Unit name\" >\n  </mat-form-field>\n  <input type=\"checkbox\"  formControlName=\"sd\"         ><span class=\"checkbox_title\">Sd</span>\n  <input type=\"checkbox\"  formControlName=\"allAlarm\"   ><span class=\"checkbox_title\">allAlarm</span>\n  <input type=\"checkbox\"  formControlName=\"read\"       ><span class=\"checkbox_title\">Read</span>\n  <input type=\"checkbox\"  formControlName=\"control\"    ><span class=\"checkbox_title\">Control</span>\n  <input type=\"checkbox\"  formControlName=\"modify\"     ><span class=\"checkbox_title\">Modify</span>\n\n  <button  type=\"button\" class=\"add-button\" mat-flat-button color=\"warn\">\n    Add\n  </button >\n</form>\n<p class=\"title\">Manage Unit Permission</p>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Checkbox Column -->\n  <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\"\n                    color=\"primary\">\n      </mat-checkbox>\n\n   \n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\" type=\"checkbox\"\n                    color=\"primary\">\n      </mat-checkbox>\n     \n    </td>\n  </ng-container>\n\n  <!-- id Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> id\n    </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} \n  </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\">\n      {{element.name}} \n     </td>\n  </ng-container>\n\n\n    <!-- sd Column -->\n    <ng-container matColumnDef=\"sd\">\n      <th mat-header-cell *matHeaderCellDef> Sd</th>\n      <td mat-cell *matCellDef=\"let element\">\n          <input type=\"checkbox\" [checked]=element.sd />\n         </td>\n    </ng-container>      \n\n    <!-- allalarm Column -->\n    <ng-container matColumnDef=\"allalarm\">\n      <th mat-header-cell *matHeaderCellDef> All alarm </th>\n      <td mat-cell *matCellDef=\"let element\">\n          <input type=\"checkbox\" [checked]=element.allalarm />\n\n          </td>\n    </ng-container>   \n\n    <!-- read Column -->\n    <ng-container matColumnDef=\"read\">\n      <th mat-header-cell *matHeaderCellDef> Read </th>\n      <td mat-cell *matCellDef=\"let element\">\n          <input type=\"checkbox\"  [checked]=element.read />\n          </td>\n    </ng-container> \n\n    <!-- control Column -->\n    <ng-container matColumnDef=\"control\">\n      <th mat-header-cell *matHeaderCellDef> Control </th>\n      <td mat-cell *matCellDef=\"let element\"  >\n          <input type=\"checkbox\" [checked]=element.control />\n\n          </td>\n    </ng-container> \n    <!-- modify Column -->\n    <ng-container matColumnDef=\"modify\">\n      <th mat-header-cell *matHeaderCellDef> Modify </th>\n      <td mat-cell *matCellDef=\"let element\"  >\n          <input type=\"checkbox\"    [checked]=element.modify />\n          </td>\n    </ng-container> \n <!-- actions Column -->\n <ng-container matColumnDef=\"actions\" stickyEnd>\n  <th mat-header-cell *matHeaderCellDef>Remove</th>\n  <td mat-cell *matCellDef=\"let element\" (click)=\"removeunit(element)\" class=\"delete_forever\">\n  <span class=\"material-icons\">close</span>\n  </td>\n</ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n  </tr>\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { User } from '../../services/user';\r\nimport { Observable } from 'rxjs';\r\nimport { first, switchMap } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MustMatch } from '../../../_helpers/must-match.validator';\r\nimport { MatDialogRef, MatDialog } from \"@angular/material/dialog\";\r\nimport { DialogBodyComponent } from '@app/management/dialog-body/dialog-body.component';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.css']\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n  hide = true;\r\n  userInfoForm :FormGroup ; \r\n  id: string;\r\n  isAddMode: boolean;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  formGroup :FormGroup ; \r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UsersService,\r\n    public dialog: MatDialog,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n  step = 3;\r\n  onFormSubmit(): void {\r\n    console.log('Name:' + this.formGroup.get('name').value);\r\n} \r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n    \r\n    // password not required in edit mode\r\n    const passwordValidators = [Validators.minLength(6)];\r\n    if (this.isAddMode) {\r\n        passwordValidators.push(Validators.required);\r\n    }\r\n\r\n    this.userInfoForm = this.formBuilder.group({\r\n       // title: ['', Validators.required],\r\n       firstName: ['', Validators.required],\r\n       lastName: ['', Validators.required],\r\n        email: ['', [Validators.required, Validators.email]],\r\n        permissionLevel: [1, Validators.required],\r\n        password: ['123456', [Validators.minLength(6), this.isAddMode ? Validators.required : Validators.nullValidator]],\r\n      //  confirmPassword: ['', this.isAddMode ? Validators.required : Validators.nullValidator]\r\n    }, {\r\n      //  validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n\r\n    if (!this.isAddMode) {\r\n        this.userService.get(this.id)\r\n            .pipe(first())\r\n            .subscribe(x =>\r\n              {\r\n                console.log(x);\r\n                 this.userInfoForm.patchValue(x);\r\n              }\r\n              );\r\n    }\r\n    }\r\n\r\n  //   createForm() {\r\n  //     let emailregex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  //     this.formGroup = this.formBuilder.group({\r\n  //       'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\r\n  //       'name': [null, Validators.required],\r\n  //       'password': [null, [Validators.required, this.checkPassword]],\r\n  //       'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n  //       'validate': ''\r\n  //     });\r\n  //   }\r\n\r\n    \r\n  // setChangeValidate() {\r\n  //   this.formGroup.get('validate').valueChanges.subscribe(\r\n  //     (validate) => {\r\n  //       if (validate == '1') {\r\n  //         this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\r\n  //         this.titleAlert = \"You need to specify at least 3 characters\";\r\n  //       } else {\r\n  //         this.formGroup.get('name').setValidators(Validators.required);\r\n  //       }\r\n  //       this.formGroup.get('name').updateValueAndValidity();\r\n  //     }\r\n  //   )\r\n  // }\r\n    gotoUserss(user: User) {\r\n      const userId = user ? user.id : null;\r\n      // Pass along the hero id if available\r\n      // so that the HeroList component can select that hero.\r\n      // Include a junk 'foo' property for fun.\r\n      this.router.navigate(['/management/users']);\r\n    }\r\n   \r\n\r\n  //  checkPassword(control) {\r\n  //   let enteredPassword = control.value\r\n  //   let passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\r\n  //   return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { 'requirements': true } : null;\r\n  // }\r\n\r\n  // checkInUseEmail(control) {\r\n  //   // mimic http database access\r\n  //   let db = ['tony@gmail.com'];\r\n  //   return new Observable(observer => {\r\n  //     setTimeout(() => {\r\n  //       let result = (db.indexOf(control.value) !== -1) ? { 'alreadyInUse': true } : null;\r\n  //       observer.next(result);\r\n  //       observer.complete();\r\n  //     }, 4000)\r\n  //   })\r\n  // }\r\n\r\n  // getErrorEmail() {\r\n  //   return this.formGroup.get('email').hasError('required') ? 'Field is required' :\r\n  //     this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\r\n  //       this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\r\n  // }\r\n\r\n  // getErrorPassword() {\r\n  //   return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\r\n  //     this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\r\n  // }\r\n\r\n  resetForm() { \r\n    this.router.navigate(['/management/users']);\r\n } \r\n  get f() { return this.userInfoForm.controls; }\r\n\r\n  onSubmit() {\r\n      this.submitted = true;\r\n\r\n      // reset alerts on submit\r\n      //this.alertService.clear();\r\n\r\n      // stop here if form is invalid\r\n      if (this.userInfoForm.invalid) {\r\n          return;\r\n      }\r\n\r\n      this.loading = true;\r\n      if (this.isAddMode) {\r\n          this.createUser();\r\n      } else {\r\n          this.updateUser();\r\n      }\r\n  }\r\n\r\n  private createUser() {\r\n      this.userService.create(this.userInfoForm.value)\r\n          .pipe(first())\r\n          .subscribe({\r\n              next: () => {\r\n                //  this.alertService.success('User added', { keepAfterRouteChange: true });\r\n                  this.router.navigate(['../'], { relativeTo: this.route });\r\n              },\r\n              error: error => {\r\n              //    this.alertService.error(error);\r\n                  this.loading = false;\r\n              }\r\n          });\r\n  }\r\n\r\n  private updateUser() {\r\n      this.userService.update(this.id, this.userInfoForm.value)\r\n          .pipe(first())\r\n          .subscribe({\r\n              next: () => {\r\n             //     this.alertService.success('User updated', { keepAfterRouteChange: true });\r\n                  // this.router.navigate(['/management/users'], { relativeTo: this.route });\r\n                  this.router.navigate(['/management/users']);\r\n              },\r\n              error: error => {\r\n              //    this.alertService.error(error);\r\n                  this.loading = false;\r\n              }\r\n          });\r\n  }\r\n  deleteUser(){\r\n\r\n    const dialogRef = this.dialog.open(DialogBodyComponent, {\r\n      width: '400px',\r\n      data: {name: this.userInfoForm.value.email, type: \"user\"}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      if(result){\r\n        this.userService.delete(this.id).subscribe();\r\n                    //     this.alertService.success('User updated', { keepAfterRouteChange: true });\r\n                  // this.router.navigate(['/management/users'], { relativeTo: this.route });\r\n                  this.router.navigate(['/management/users']);\r\n      } \r\n\r\n    });   \r\n  }\r\n}","<mat-toolbar class=\"secondary-toolbar\" >   \r\n    <button mat-icon-button >  <mat-icon>list</mat-icon></button>\r\n    <h1 class=\"submenu-title\">User Setting  </h1>\r\n    <ng-template [ngIf]=\"!isAddMode\" >\r\n      <button   mat-flat-button color=\"warn\"  routerLink=\"/management/edit/user\"  >\r\n        <span class=\"material-icons\">perm_identity</span>Add New User\r\n      </button >\r\n    </ng-template>\r\n  </mat-toolbar>\r\n  <!-- <h2>{{ user.firstName }}</h2> -->\r\n      <mat-accordion>\r\n        <!-- اطلاعات حساب کاربری -->\r\n        <!-- <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <span class=\"material-icons \">\r\n                desktop_windows\r\n                </span>\r\n              Account information\r\n            </mat-panel-title>            \r\n          </mat-expansion-panel-header>\r\n      \r\n        </mat-expansion-panel> -->\r\n      <!-- اطلاعات شخصی کاربر -->\r\n        <mat-expansion-panel [expanded]=\"true\" (opened)=\"setStep(1)\" >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <span class=\"material-icons \">\r\n                person_outlined\r\n                </span>\r\n              Personal information\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n      <form [formGroup]=\"userInfoForm\"  class=\"form\">\r\n        <mat-form-field class=\"form-element\" appearance=\"fill\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput placeholder=\"Enter first name\" formControlName=\"firstName\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-element\" appearance=\"fill\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput placeholder=\"Enter last name\" formControlName=\"lastName\">\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field class=\"form-element\" appearance=\"fill\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"Enter email\" formControlName=\"email\">\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <mat-label>Enter your password</mat-label>\r\n          <input matInput [type]=\"hide ? 'password' : 'text'\"  formControlName=\"password\">\r\n          <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <mat-label>confirmP your password</mat-label>\r\n          <input matInput [type]=\"hide ? 'password' : 'text'\"  formControlName=\"confirmPassword\">\r\n          <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n          </button>\r\n        </mat-form-field> -->\r\n\r\n\r\n        <!-- <mat-form-field appearance=\"fill\">\r\n          <mat-label>Phone number</mat-label>\r\n          <input matInput formControlName=\"tel\" required>\r\n          <mat-icon matSuffix>phone</mat-icon>\r\n          <mat-hint>Include area code</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-element\" appearance=\"fill\">\r\n          <mat-label>Company name</mat-label>\r\n          <input matInput placeholder=\"Enter company name\" formControlName=\"company\">\r\n        </mat-form-field> -->\r\n\r\n        <!-- <mat-form-field class=\"form-element\" appearance=\"fill\">\r\n          <input matInput placeholder=\"Choose country\" formControlName=\"country\">\r\n        </mat-form-field> -->\r\n\r\n        <!-- <mat-form-field  appearance=\"fill\">\r\n          <mat-label>Choose country</mat-label>\r\n          <mat-select [(value)]=\"selected\"  formControlName=\"country\">\r\n            <mat-option>None</mat-option>\r\n            <mat-option value=\"Ir\">Iran</mat-option>\r\n            <mat-option value=\"Usa\">United State of America (Usa)</mat-option>\r\n            <mat-option value=\"UK\">United kingdom (UK)</mat-option>\r\n          </mat-select>\r\n        </mat-form-field> -->\r\n\r\n        </form>\r\n   \r\n        </mat-expansion-panel>\r\n      <!-- اطلاعات حساب  -->\r\n        <!-- <mat-expansion-panel [expanded]=\"false\" (opened)=\"setStep(2)\" >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <span class=\"material-icons \">\r\n                home\r\n                </span>Invoice information\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n        </mat-expansion-panel> -->\r\n\r\n        <!-- Permissions -->\r\n        <!-- <mat-expansion-panel [expanded]=\"true\" (opened)=\"setStep(2)\" >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <span class=\"material-icons \">\r\n                vpn_key_outlined\r\n                </span>\r\n              Permissions\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <user-edit-permission></user-edit-permission>\r\n        </mat-expansion-panel> -->\r\n      \r\n      </mat-accordion>\r\n      \r\n      <!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n          Use of this source code is governed by an MIT-style license that\r\n          can be found in the LICENSE file at http://angular.io/license -->\r\n          \r\n  \r\n  <mat-toolbar class=\"footing-toolbar\" >  \r\n    <ng-template [ngIf]=\"!isAddMode\" >\r\n      <button   mat-flat-button color=\"warn\" class=\"btndelete\" >\r\n        <span class=\"material-icons\" (click)=\"deleteUser()\" >delete_forever</span>Delete\r\n      </button > \r\n    </ng-template>\r\n    <button   mat-flat-button color=\"warn\" >\r\n        <span class=\"material-icons\" (click)=\"onSubmit()\" >save</span>Save\r\n    </button >\r\n    \r\n    <button  type=\"button\" (click) = \"resetForm()\" mat-flat-button color=\"warn\">\r\n        <span class=\"material-icons\"  >restore</span>Cancel\r\n    </button >\r\n  </mat-toolbar>\r\n  \r\n\r\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { GroupsService } from '../services/groups.service';\nimport { Group } from '../services/group';\nimport { DialogBodyComponent } from '../dialog-body/dialog-body.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n  groups:Group[];\n  displayedColumns: string[] = ['select', 'id', 'name','actions'];\n  dataSource = new MatTableDataSource<Group>(this.groups);\n  selection = new SelectionModel<Group>(true, []);\n\n  constructor(private GroupService: GroupsService,\n    public dialog: MatDialog) { }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  ngOnInit(): void {\n    this.retrieveUsers();\n  }\n\n  retrieveUsers(): void {\n    this.GroupService.getAll()\n      .subscribe(\n        data => {\n          this.groups = data;\n          this.dataSource = new MatTableDataSource<Group>(this.groups);\n          this.selection = new SelectionModel<Group>(true, []);\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });        \n  }\n\n  deleteUser( group: Group){\n\n    const dialogRef = this.dialog.open(DialogBodyComponent, {\n      width: '400px',\n      data: {name: group.name, type: \"group\"}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if(result){\n        this.GroupService.delete(group.id).subscribe();\n        this.retrieveUsers();\n      } \n\n    });   \n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Group): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                      [aria-label]=\"checkboxLabel()\"\r\n                      color=\"primary\">\r\n        </mat-checkbox>\r\n\r\n     \r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                      (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\"\r\n                      [aria-label]=\"checkboxLabel(row)\" type=\"checkbox\"\r\n                      color=\"primary\">\r\n        </mat-checkbox>\r\n       \r\n      </td>\r\n    </ng-container>\r\n  \r\n    <!-- id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef> id\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} \r\n    </td>\r\n    </ng-container>\r\n  \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <a routerLink=\"/management/edit/group/{{element.id}}\"   routerLinkActive=\"active-link\"   >   {{element.name}}  </a>\r\n      </td>\r\n    </ng-container>\r\n  \r\n\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n    </ng-container>\r\n       <!-- actions Column -->\r\n   <ng-container matColumnDef=\"actions\" stickyEnd>\r\n    <th mat-header-cell *matHeaderCellDef></th>\r\n    <td mat-cell *matCellDef=\"let element\" (click)=\"deleteUser(element)\" class=\"delete_forever\">\r\n    <span class=\"material-icons\">delete_forever</span>\r\n    </td>\r\n  </ng-container>\r\n  \r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n    </tr>\r\n  </table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-management',\n  templateUrl: './management.component.html',\n  styleUrls: ['./management.component.css']\n})\nexport class ManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"secondary-toolbar\" >  \r\n\r\n  <ng-template [ngIf]=\"users.isActive\">\r\n    <h1  class=\"submenu-title\">Users</h1>\r\n    <button mat-flat-button color=\"warn\"  routerLink=\"/management/edit/user\"   routerLinkActive=\"active-link \">\r\n      <span class=\"material-icons\">perm_identity</span>\r\n      Add User\r\n    </button >\r\n  </ng-template>\r\n\r\n  <ng-template [ngIf]=\"units.isActive\">\r\n    <h1  class=\"submenu-title\">Units</h1>\r\n    <button mat-flat-button color=\"warn\"  routerLink=\"/management/edit/unit\"   routerLinkActive=\"active-link \">\r\n      <span class=\"material-icons\">perm_identity</span>\r\n      Add Unit\r\n    </button >\r\n  </ng-template>\r\n\r\n\r\n  <ng-template [ngIf]=\"groups.isActive\">\r\n    <h1  class=\"submenu-title\">Groups</h1>\r\n    <button mat-flat-button color=\"warn\"  routerLink=\"/management/edit/group\"   routerLinkActive=\"active-link \">\r\n      <span class=\"material-icons\">perm_identity</span>\r\n      Add Group\r\n    </button >\r\n  </ng-template>\r\n\r\n\r\n  <h1 class=\"submenu-title push-right\" >Management:  </h1>\r\n    <span ><mat-icon>fact_check</mat-icon> <a mat-button routerLink=\"/management/units\"    #units=\"routerLinkActive\" routerLinkActive=\"active-link \"   > Units </a></span>\r\n    <span ><mat-icon>fact_check</mat-icon> <a mat-button routerLink=\"/management/users\"    #users=\"routerLinkActive\" routerLinkActive=\"active-link\"   > Users </a></span>\r\n    <span ><mat-icon>fact_check</mat-icon> <a mat-button routerLink=\"/management/groups\"   #groups=\"routerLinkActive\" routerLinkActive=\"active-link\"   > Groups </a></span>\r\n    <span ><mat-icon>settings</mat-icon>   <a mat-button routerLink=\"/management/activity\" #activity=\"routerLinkActive\" routerLinkActive=\"active-link\"   > Activity logger </a>        </span>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>\r\n\r\n","import { NgModule } from  '@angular/core';\r\nimport { Routes, RouterModule } from  '@angular/router';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\n\r\nimport { EditModule } from  './edit/edit.module';\r\n\r\n\r\n\r\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { DataService } from './services/data.service';\r\n\r\n\r\n\r\nimport { UnitsComponent } from './units/units.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { GroupsComponent } from './groups/groups.component';\r\nimport { ManagementComponent } from './management.component';\r\nimport { ActivityComponent } from './activity/activity.component';\r\n\r\n\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { DialogBodyComponent } from './dialog-body/dialog-body.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n\r\n\r\nconst  routes:  Routes  = [\r\n  {\r\n  path:  'management',\r\n  component:  ManagementComponent,\r\n  children: [\r\n    {\r\n      path:  'groups',\r\n      component:  GroupsComponent\r\n      },\r\n    {\r\n      path:  'users',\r\n      component:  UsersComponent\r\n    },\r\n    {\r\n      path:  'units',\r\n      component:  UnitsComponent\r\n    },\r\n    {\r\n      path:  'activity',\r\n      component:  ActivityComponent\r\n    },\r\n    {\r\n      path:  'edit',\r\n      component:  EditComponent\r\n    }\r\n  ]\r\n  }\r\n  ];\r\n\r\n\r\n@NgModule({\r\n  declarations: [UnitsComponent, UsersComponent, GroupsComponent, ManagementComponent, ActivityComponent, DialogBodyComponent],\r\n  imports: [\r\n\r\n    BrowserModule,\r\n    // import HttpClientModule after BrowserModule.\r\n    HttpClientModule,\r\n\r\n    \r\n    CommonModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    environment.useMockServer ?   InMemoryWebApiModule.forRoot(DataService, {\r\n      passThruUnknownUrl: true\r\n    }) : [],\r\n    EditModule,\r\n    RouterModule.forChild(routes)\r\n\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class ManagementModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { User } from './user';\r\nimport { Group } from './group';\r\nimport { Unit } from './unit';\r\nimport { UserPermit } from './user-permit';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService implements InMemoryDbService {\r\n  createDb() {\r\n    \r\n    const users: User[] = [\r\n      {id:1,unitCount: 1, fistname: 'M.Reza', email:'mmhajjar82@gmail.com' ,lastname:'mrhb',    lang:'En',conn:1,reportsM:true,reportsW:true,api:true,isadmin:true },\r\n      {id:2,unitCount: 2, fistname: 'Hajjar.B'  ,email:'sdf_435@hotmail.com'  ,lastname:'masdfrhb',lang:'En',conn:1,reportsM:false,reportsW:false,api:true,isadmin:false},\r\n      {id:3,unitCount: 3, fistname: 'mrhb' ,email:'dfsced_def@yahoo.com' ,lastname:'mdfrhb',  lang:'En',conn:1,reportsM:true,reportsW:true,api:true,isadmin:false},      \r\n    ];\r\n\r\n    const users_permits: UserPermit[] = [\r\n      {id:1,name: 'M.Reza'   ,sd:false,allalarm:true,read:false,control:true,modify:false},\r\n      {id:2,name: 'Hajjar.B' ,sd:false,allalarm:true,read:false,control:true,modify:false},\r\n      {id:3,name: 'mrhb'     ,sd:false,allalarm:true,read:false,control:true,modify:false},\r\n    ];\r\n    // const units: Unit[] = [\r\n    //   {id:1,name: 'unit1',groups:'g1',customer:'tetaPower',gate:'654.168.167.56',disable:true,comm:false},\r\n    //   {id:2,name: 'unit2',groups:'gasdf',customer:'tetaPower',gate:'234.333.61.55',disable:true,comm:false},\r\n    //   {id:3,name: 'unit3',groups:'gqwe',customer:'tetaPower',gate:'343.168.56.35',disable:true,comm:false},\r\n    //   {id:4,name: 'unit4',groups:'dfe1',customer:'tetaPower',gate:'324.168.1.37',disable:true,comm:false},\r\n    // ];\r\n      \r\n\r\n\r\n    const groups: Group[] = [\r\n      { id: 11, name: 'charm shahr' },\r\n      { id: 12, name: 'Aban' },\r\n      { id: 13, name: 'Maqsoud' },\r\n      { id: 14, name: 'Armitajh' },\r\n     \r\n    ];\r\n    // return {users,groups,units};\r\n    return {users,groups};\r\n  }\r\n\r\n  // Overrides the genId method to ensure that a hero always has an id.\r\n  // If the heroes array is empty,\r\n  // the method below returns the initial number (11).\r\n  // if the heroes array is not empty, the method below returns the highest\r\n  // hero id + 1.\r\n  // genId(users: User[]): number {\r\n  //   return users.length > 0 ? Math.max(...users.map(user => user.id)) + 1 : 11;\r\n  // }\r\n\r\n  genId<T extends User |Group|UserPermit>(myTable: T[]): number {\r\n    return myTable.length > 0 ? Math.max(...myTable.map(t => t.id)) + 1 : 11;\r\n  }\r\n}","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MessageService } from './message.service';\n\nconst baseUrl = 'http://localhost:3600/api/groups';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupsService {\n\n  constructor(private http: HttpClient,\n    private messageService: MessageService) { }\n    \n    private log(message: string) {\n      this.messageService.add(`GroupService: ${message}`);\n    }\n\n  getAll(): Observable<any> {\n    return this.http.get(baseUrl);\n  }\n\n  get(id): Observable<any> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  \n  create(data): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id, data): Observable<any> {\n    return this.http.patch(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByTitle(title): Observable<any> {\n    return this.http.get(`${baseUrl}?title=${title}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { MessageService } from './message.service';\nimport { environment } from '@environments/environment';\n\nconst baseUrl =environment.userUrl+ '/api/units';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitsService {\n\n  constructor(private http: HttpClient,\n    private messageService: MessageService) { }\n    \n    private log(message: string) {\n      this.messageService.add(`UnitService: ${message}`);\n    }\n\n  getAll(): Observable<any> {\n    return this.http.get(baseUrl);\n  }\n\n  get(id): Observable<any> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  \n  create(data): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id, data): Observable<any> {\n    return this.http.patch(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByTitle(title): Observable<any> {\n    return this.http.get(`${baseUrl}?title=${title}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { MessageService } from './message.service';\n\nconst baseUrl = 'http://localhost:3600/api/users';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersPermitsService {\n\n  constructor(private http: HttpClient,\n    private messageService: MessageService) { }\n    \n    private log(message: string) {\n      this.messageService.add(`UsersPermitsService: ${message}`);\n    }\n\n  getAll(): Observable<any> {\n    return this.http.get(baseUrl);\n  }\n\n  get(id): Observable<any> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  \n  create(data): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id, data): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByTitle(title): Observable<any> {\n    return this.http.get(`${baseUrl}?title=${title}`);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\nimport { MessageService } from './message.service';\r\n\r\nconst baseUrl =environment.userUrl+ '/api/users';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  constructor(private http: HttpClient,\r\n    private messageService: MessageService) { }\r\n    \r\n    private log(message: string) {\r\n      this.messageService.add(`UserService: ${message}`);\r\n    }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get(baseUrl);\r\n\r\n   // return this.http.get(baseUrl);\r\n  }\r\n\r\n  get(id): Observable<any> {\r\n    return this.http.get(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  \r\n  create(data): Observable<any> {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id, data): Observable<any> {\r\n    return this.http.patch(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n  delete(id): Observable<any> {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.http.delete(baseUrl);\r\n  }\r\n\r\n  findByTitle(title): Observable<any> {\r\n    return this.http.get(`${baseUrl}?title=${title}`);\r\n  }\r\n}\r\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\n\nimport { MatDialogRef, MatDialog } from \"@angular/material/dialog\";\n\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { UnitsService } from '../services/units.service';\nimport { Unit } from '../services/unit';\nimport { DialogBodyComponent } from '../dialog-body/dialog-body.component';\n@Component({\n  selector: 'app-units',\n  templateUrl: './units.component.html',\n  styleUrls: ['./units.component.css']\n})\nexport class UnitsComponent implements OnInit {\n  units:Unit[];\n  displayedColumns: string[] = ['select', 'id', 'name','deviceType','state','netaddress','groups','customer','gate','disable','comm','actions'];\n  dataSource = new MatTableDataSource<Unit>(this.units);\n  selection = new SelectionModel<Unit>(true, []);\n\n  constructor(private UnitsService: UnitsService,\n    public dialog: MatDialog) { }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  ngOnInit(): void {\n    this.retrieveUsers();\n  }\n\n  retrieveUsers(): void {\n    this.UnitsService.getAll()\n      .subscribe(\n        data => {\n          this.units = data;\n          this.dataSource = new MatTableDataSource<Unit>(this.units);\n          this.selection = new SelectionModel<Unit>(true, []);\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n\n        \n  }\n  deleteUser( unit: Unit){\n\n    const dialogRef = this.dialog.open(DialogBodyComponent, {\n      width: '400px',\n      data: {name: unit.name, type: \"unit\"}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if(result){\n        this.UnitsService.delete(unit.id).subscribe();\n        this.retrieveUsers();\n      } \n    });      \n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Unit): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!-- Checkbox Column -->\n    <ng-container matColumnDef=\"select\">\n      <th mat-header-cell *matHeaderCellDef>\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                      [aria-label]=\"checkboxLabel()\"\n                      color=\"primary\">\n        </mat-checkbox>\n\n     \n      </th>\n      <td mat-cell *matCellDef=\"let row\">\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\"\n                      [aria-label]=\"checkboxLabel(row)\" type=\"checkbox\"\n                      color=\"primary\">\n        </mat-checkbox>\n       \n      </td>\n    </ng-container>\n  \n    <!-- id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> id\n      </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} \n    </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> \n        <a routerLink=\"/management/edit/unit/{{element.id}}\"   routerLinkActive=\"active-link\"   >   {{element.name}}  </a>\n      </td>\n    </ng-container>\n\n    <!-- State Column -->\n    <ng-container matColumnDef=\"state\">\n      <th mat-header-cell *matHeaderCellDef> State </th>\n      <td mat-cell *matCellDef=\"let element\"> \n        {{element.state}}\n      </td>\n    </ng-container>\n\n    <!-- netaddress Column -->\n    <ng-container matColumnDef=\"netaddress\">\n      <th mat-header-cell *matHeaderCellDef> Net Address </th>\n      <td mat-cell *matCellDef=\"let element\"> \n        {{element.ip}}:{{element.port}}\n      </td>\n    </ng-container>\n\n    <!-- deviceType Column -->\n    <ng-container matColumnDef=\"deviceType\">\n      <th mat-header-cell *matHeaderCellDef> Type </th>\n      <td mat-cell *matCellDef=\"let element\"> \n        {{element.deviceType}}\n      </td>\n    </ng-container>\n  \n    <!-- groups Column -->\n    <ng-container matColumnDef=\"groups\">\n      <th mat-header-cell *matHeaderCellDef> groups </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.groups}} </td>\n    </ng-container>\n      <!-- customer Column -->\n      <ng-container matColumnDef=\"customer\">\n        <th mat-header-cell *matHeaderCellDef> customer </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.customer}} </td>\n      </ng-container>\n\n      <!-- gate Column -->\n      <ng-container matColumnDef=\"gate\">\n        <th mat-header-cell *matHeaderCellDef> gate\n        </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.gate}} \n      </td>\n      </ng-container>\n\n\n      <!-- disable Column -->\n      <ng-container matColumnDef=\"disable\">\n        <th mat-header-cell *matHeaderCellDef> disable </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <!-- <mat-checkbox [checked]=element.disable></mat-checkbox >  -->\n            <input type=\"checkbox\" disabled=\"disabled\"   [checked]=element.state />\n\n           </td>\n      </ng-container>      \n\n      <!-- comm Column -->\n      <ng-container matColumnDef=\"comm\">\n        <th mat-header-cell *matHeaderCellDef> comm </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <!-- <mat-checkbox [checked]=element.comm></mat-checkbox >  -->\n            <input type=\"checkbox\" disabled=\"disabled\"   [checked]=element.comm />\n\n            </td>\n      </ng-container>   \n\n       <!-- actions Column -->\n   <ng-container matColumnDef=\"actions\" stickyEnd>\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\" (click)=\"deleteUser(element)\" class=\"delete_forever\">\n    <span class=\"material-icons\">delete_forever</span>\n    </td>\n  </ng-container>\n  \n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n    </tr>\n  </table>","import {SelectionModel} from '@angular/cdk/collections';\r\nimport {Component, OnInit } from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nimport { MatDialogRef, MatDialog } from \"@angular/material/dialog\";\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n\r\n\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { UsersService } from '../services/users.service';\r\nimport { User } from '../services/user';\r\nimport { DialogBodyComponent } from '../dialog-body/dialog-body.component';\r\nimport { Unit } from '../services/unit';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/**\r\n * @title Table with selection\r\n */\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  formGroup :FormGroup ; \r\n\r\n  users:User[];\r\n  displayedColumns: string[] = ['select', 'id', 'firstname','lastname','email','unitCount','lang','conn','reportsM','reportsW','api','isadmin','actions'];\r\n  dataSource = new MatTableDataSource<User>();\r\n  selection = new SelectionModel<User>(true, []);\r\n\r\n\r\n \r\n  constructor(private UsersService: UsersService,\r\n    public dialog: MatDialog,\r\n    public http:HttpClient) { }\r\n\r\n    \r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n  ngOnInit(): void {\r\n    this.retrieveUsers();\r\n    this.formGroup=new FormGroup({\r\n     action: new FormControl(),\r\n     value: new FormControl()\r\n   });\r\n\r\n  }\r\n\r\n  retrieveUsers(): void {\r\n\r\n\r\n    this.UsersService.getAll()\r\n      .subscribe(\r\n        data => {\r\n          this.users = data;\r\n          this.dataSource = new MatTableDataSource<User>(this.users);\r\n          this.selection = new SelectionModel<User>(true, []);\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n\r\n        \r\n  }\r\n  deleteUser( user: Unit){\r\n\r\n    const dialogRef = this.dialog.open(DialogBodyComponent, {\r\n      width: '400px',\r\n      data: {name: user.name, type: \"user\"}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      if(result){\r\n        this.UsersService.delete(user.id).subscribe();\r\n        this.retrieveUsers();\r\n      } \r\n\r\n    });   \r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n        this.selection.clear() :\r\n        this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: User): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\r\n  }\r\n}","<div class=\"bulckActions\">\r\n  <form [formGroup]=\"formGroup\"  class=\"form\">\r\n      <mat-form-field  >\r\n      <mat-label>Bulc action</mat-label>\r\n      <mat-select  formControlName=\"action\">\r\n        <mat-option>None</mat-option>\r\n        <mat-option value=\"Ir\">Set Send a report monthly</mat-option>\r\n        <mat-option value=\"Ir\">Set Send a report weekly</mat-option>\r\n        <mat-option value=\"Ir\">Set API permissions</mat-option>\r\n        <mat-option value=\"Usa\">SetAdmin role</mat-option>\r\n        <mat-option value=\"UK\">Delete</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n\r\n    <mat-form-field  >\r\n      <mat-label>Choose value</mat-label>\r\n      <mat-select >\r\n        <mat-option>None</mat-option>\r\n        <mat-option value='True'>True</mat-option>\r\n        <mat-option value='False'>False</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    \r\n    <button  type=\"button\"  mat-flat-button color=\"warn\">\r\n      Apply\r\n  </button >\r\n    </form>\r\n</div>\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                      [aria-label]=\"checkboxLabel()\"\r\n                      color=\"primary\">\r\n        </mat-checkbox>\r\n\r\n     \r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                      (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\"\r\n                      [aria-label]=\"checkboxLabel(row)\" type=\"checkbox\"\r\n                      color=\"primary\">\r\n        </mat-checkbox>\r\n       \r\n      </td>\r\n    </ng-container>\r\n  \r\n    <!-- id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef> id\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} \r\n    </td>\r\n    </ng-container>\r\n  \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"firstname\">\r\n      <th mat-header-cell *matHeaderCellDef>First Name </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <a routerLink=\"/management/edit/user/{{element.id}}\"   routerLinkActive=\"active-link\"   >   {{element.firstName}}  </a>\r\n       </td>\r\n    </ng-container>\r\n  \r\n    <!-- loginId Column -->\r\n    <ng-container matColumnDef=\"lastname\">\r\n      <th mat-header-cell *matHeaderCellDef> Last Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\r\n    </ng-container>\r\n      <!-- email Column -->\r\n      <ng-container matColumnDef=\"email\">\r\n        <th mat-header-cell *matHeaderCellDef> email </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\r\n      </ng-container>\r\n\r\n      <!-- unitCount Column -->\r\n      <ng-container matColumnDef=\"unitCount\">\r\n        <th mat-header-cell *matHeaderCellDef> unit no.\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.unitCount}} \r\n      </td>\r\n      </ng-container>\r\n\r\n      <!-- lang Column -->\r\n      <ng-container matColumnDef=\"lang\">\r\n        <th mat-header-cell *matHeaderCellDef> lang </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.lang}} </td>\r\n      </ng-container>\r\n     \r\n      <!-- conn Column -->\r\n      <ng-container matColumnDef=\"conn\">\r\n        <th mat-header-cell *matHeaderCellDef> connctions </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.conn}} </td>\r\n      </ng-container>\r\n\r\n      <!-- reportsM Column -->\r\n      <ng-container matColumnDef=\"reportsM\">\r\n        <th mat-header-cell *matHeaderCellDef> reports M </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <!-- <mat-checkbox [checked]=element.reportsM></mat-checkbox >  -->\r\n            <input type=\"checkbox\" disabled=\"disabled\"   [checked]=element.reportsM />\r\n\r\n           </td>\r\n      </ng-container>      \r\n\r\n      <!-- reportsW Column -->\r\n      <ng-container matColumnDef=\"reportsW\">\r\n        <th mat-header-cell *matHeaderCellDef> reports W </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <!-- <mat-checkbox [checked]=element.reportsW></mat-checkbox >  -->\r\n            <input type=\"checkbox\" disabled=\"disabled\"   [checked]=element.reportsW />\r\n\r\n            </td>\r\n      </ng-container>   \r\n\r\n      <!-- api Column -->\r\n      <ng-container matColumnDef=\"api\">\r\n        <th mat-header-cell *matHeaderCellDef> api </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <!-- <mat-checkbox [checked]=element.api></mat-checkbox >  -->\r\n            <input type=\"checkbox\" disabled=\"disabled\"   [checked]=element.api />\r\n\r\n            </td>\r\n      </ng-container> \r\n\r\n      <!-- isadmin Column -->\r\n      <ng-container matColumnDef=\"isadmin\">\r\n        <th mat-header-cell *matHeaderCellDef> isadmin </th>\r\n        <td mat-cell *matCellDef=\"let element\"  >\r\n          <!-- <mat-checkbox [checked]=element.isadmin></mat-checkbox >  -->\r\n            <input type=\"checkbox\" disabled=\"disabled\"   [checked]=element.isadmin />\r\n\r\n            </td>\r\n      </ng-container> \r\n\r\n   <!-- actions Column -->\r\n   <ng-container matColumnDef=\"actions\" stickyEnd>\r\n    <th mat-header-cell *matHeaderCellDef></th>\r\n    <td mat-cell *matCellDef=\"let element\" (click)=\"deleteUser(element)\" class=\"delete_forever\">\r\n    <span class=\"material-icons\">delete_forever</span>\r\n    </td>\r\n  </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n    </tr>\r\n  </table>","import { Component, OnInit, ComponentFactoryResolver, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport{ViewComponent, RowElement} from './view.component'\r\nimport { TableviewComponent } from './tableview/tableview.component';\r\nimport { ViewUnitsDirective } from './view-units.directive';\r\nimport { IconviewComponent } from './iconview/iconview.component';\r\nimport { ModuleviewComponent } from './moduleview/moduleview.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.css']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n  @Input() ViewType: string;\r\n  @Output() unitSelectionEvent = new EventEmitter<number>(); tempnum:number=0;\r\n  @ViewChild(ViewUnitsDirective, {static: true}) appViewUnits: ViewUnitsDirective;\r\n\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\r\n\r\n  viewClick(){\r\n    this.tempnum=this.tempnum+1;\r\n    console.log(this.tempnum +\"  clicked\");\r\n    this.unitSelectionEvent.emit(this.tempnum);\r\n  }\r\n  ngOnInit(): void {\r\n    this.LoadView(this.ViewType) ;\r\n  }\r\n  ngOnChanges() {\r\n    this.LoadView(this.ViewType) ;\r\n    // You can also use categoryId.previousValue and \r\n    // categoryId.firstChange for comparing old and new values\r\n    \r\n}\r\n  LoadView(Type:string) {\r\n    const viewContainerRef = this.appViewUnits.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    let componentFactory : any;//this.componentFactoryResolver.resolveComponentFactory(TableviewComponent);\r\n    switch(Type) { \r\n      case \"table\": { \r\n           componentFactory = this.componentFactoryResolver.resolveComponentFactory(TableviewComponent);\r\n        //statements; \r\n        break; \r\n      } \r\n      case \"icon\": { \r\n         componentFactory = this.componentFactoryResolver.resolveComponentFactory(IconviewComponent);\r\n        // statements; \r\n        break; \r\n      } \r\n      default: { \r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(ModuleviewComponent);\r\n         //statements; \r\n         break; \r\n      } \r\n   } \r\n\r\n\r\n\r\n\r\n     const componentRef = viewContainerRef.createComponent<ViewComponent>(componentFactory);\r\n     componentRef.instance.data =this.view_DATA;\r\n  }\r\n\r\n\r\n\r\n\r\n view_DATA: RowElement[] = [\r\n  {\r\n    itemName: 'CharmShahr',\r\n    engines:'(2)',\r\n    update:2,\r\n    subunits:[\r\n      {\r\n        itemName: 'unit 1',\r\n        engines:'ready',\r\n        update:2,\r\n        subunits:[],\r\n        alarm:{name:'*WrnServiceTime',Icon:'ECU'}\r\n      },\r\n      {\r\n        itemName: 'unit 20',\r\n        engines:'Shot down',\r\n        update:1,\r\n        subunits:[],\r\n        alarm:{name:'*WrnServiceTime',Icon:'alarm'}\r\n      },\r\n    ],\r\n    alarm:{name:'*Emergency stop', Icon:'sutdown'}\r\n  },\r\n  {\r\n    itemName: 'unit 2',\r\n    engines:'ready',\r\n    update:1,\r\n    subunits:[],\r\n    alarm:{name:'*Emergency stop', Icon:'warning'}\r\n  },\r\n  {\r\n    itemName: 'unit 3',\r\n    engines:'(3)',\r\n    update:3,\r\n    subunits:[],\r\n    alarm:{name:'*WrnServiceTime',Icon:'ECU'}\r\n  }\r\n];\r\n}","<h1 (click)=\"viewClick()\"> header</h1>\r\n<form class=\"filter-sort-panel\">\r\n    <button mat-button >\r\n        <mat-icon >warning</mat-icon>\r\n        Alarm type\r\n    </button>\r\n    <button mat-button  >\r\n        <mat-icon> av_timer </mat-icon>\r\n        Unit name\r\n        <mat-icon>keyboard_arrow_down</mat-icon>\r\n    </button>\r\n    <button mat-button >\r\n        <span class=\"material-icons material-icons-outlined\">\r\n            update\r\n            </span>\r\n            Last Update\r\n            <mat-icon>keyboard_arrow_down</mat-icon>\r\n    </button>\r\n    <div>\r\n    <input matInput type=\"search\" placeholder=\"search here\" class=\"search-input\">\r\n    </div>\r\n    \r\n \r\n</form> \r\n<ng-template appViewUnits  ></ng-template>\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ViewComponent } from '../view.component';\n\n@Component({\n  selector: 'app-iconview',\n  templateUrl: './iconview.component.html',\n  styleUrls: ['./iconview.component.sass']\n})\nexport class IconviewComponent implements ViewComponent,OnInit {\n  @Input() data: any;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","<h1>iconview works!</h1>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ViewComponent } from '../view.component';\n\n@Component({\n  selector: 'app-moduleview',\n  templateUrl: './moduleview.component.html',\n  styleUrls: ['./moduleview.component.sass']\n})\nexport class ModuleviewComponent implements ViewComponent,OnInit {\n  @Input() data: any;\n\n  constructor() { }\n\n \n  ngOnInit(): void {\n  }\n\n}\n","<h1>moduleview works!</h1>\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport{ViewComponent, RowElement} from '../view.component'\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-tableview',\n  templateUrl: './tableview.component.html',\n  styleUrls: ['./tableview.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableviewComponent implements ViewComponent,OnInit {\n  @Input() data: any;\n  dataSource = new MatTableDataSource<RowElement[]>();\n  \n  constructor() { \n  }\n\n  // dataSource = ELEMENT_DATA; \n  \n  columnsToDisplay = ['Alarm','Name','Engine','Update','Actions'];\n  expandedElement: RowElement[] = [];\n  \n  \n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource<RowElement[]>(this.data);\n  }\n  checkExpanded(element): boolean {\n    let flag = false;\n    this.expandedElement.forEach(e => {\n      if(e === element) {\n        flag = true;        \n      }\n    });\n    return flag;\n  }\n\n  pushPopElement(element) {\n    const index = this.expandedElement.indexOf(element);\n    console.log(index);\n    if(index === -1) {\n        this.expandedElement.push(element);\n    } else {\n      this.expandedElement.splice(index,1);\n    }\n  }\n\n}","\n<table mat-table\n       [dataSource]=\"dataSource\" \n       multiTemplateDataRows     \n       class=\"mat-elevation-z8\">\n\n    <!-- Alarm Column -->\n    <ng-container matColumnDef=\"Alarm\">\n        <th mat-header-cell *matHeaderCellDef>Alarm</th>\n        <td class=\"alarm-column\" mat-cell *matCellDef=\"let element\">\n          <span  class=\"material-icons {{element.alarm.Icon}} \">warning</span>\n        </td>\n    </ng-container>\n    \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"Name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td class=\"name-column\" mat-cell *matCellDef=\"let element\">\n        <!-- <span  class=\"name-column\">{{element.itemName}} </span>  -->\n        <div class=\"backgroundAlarm {{element.alarm.Icon}}\">\n          {{element.itemName}}\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- Engine Column -->\n    <ng-container matColumnDef=\"Engine\">\n        <th class=\"engin-column\" mat-header-cell *matHeaderCellDef>Engine</th>\n        <td class=\"engin-column\" mat-cell *matCellDef=\"let element\">{{element.engines}} </td>\n    </ng-container>\n\n    <!-- Update Column -->\n    <ng-container matColumnDef=\"Update\">\n        <th mat-header-cell *matHeaderCellDef>Update</th>\n        <td class=\"pdate-column\" mat-cell *matCellDef=\"let element\">\n          <container-element [ngSwitch]=\"element.update\">\n            <!-- the same view can be shown in more than one case -->\n            <some-element *ngSwitchCase='1'><span class=\"material-icons\">cast_for_education</span></some-element>\n            <some-element *ngSwitchCase='2'><span class=\"material-icons\">cast</span></some-element>\n            <some-element *ngSwitchCase='3'><span class=\"material-icons\">cast_connected</span></some-element>\n            <!--default case when there are no matches -->\n            <some-element *ngSwitchDefault>?</some-element>\n          </container-element>\n        </td>\n    </ng-container>      \n\n    <!-- Actions Column -->\n    <ng-container matColumnDef=\"Actions\">\n        <th mat-header-cell *matHeaderCellDef>Actions</th>\n        <td class=\"name-actions\" mat-cell *matCellDef=\"let element\"> {{element.unitname}}\n        </td>\n    </ng-container>   \n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"element-detail-container \"\n      [@detailExpand]=\"checkExpanded(element) ? 'expanded' : 'collapsed'\">\n        <div class=\"element-detail-element\" *ngFor=\"let unit of element.subunits\">\n          \n              <span  class=\" material-icons {{unit.alarm.Icon}} \">warning</span>\n              <div   class=\"name backgroundAlarm {{unit.alarm.Icon}}\">\n                {{unit.itemName}}\n              </div>\n              <div>\n                {{unit.engines}}\n              </div>\n              <container-element [ngSwitch]=\"unit.update\">\n                <!-- the same view can be shown in more than one case -->\n                <some-element *ngSwitchCase='1'><span class=\"material-icons\">cast_for_education</span></some-element>\n                <some-element *ngSwitchCase='2'><span class=\"material-icons\">cast</span></some-element>\n                <some-element *ngSwitchCase='3'><span class=\"material-icons\">cast_connected</span></some-element>\n                <!--default case when there are no matches -->\n                <some-element *ngSwitchDefault>?</some-element>\n              </container-element>\n              \n         </div>\n\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"checkExpanded(element)\"\n      (click)=\"pushPopElement(element)\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n</table>\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appViewUnits]'\n})\nexport class ViewUnitsDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { icon, latLng, Map, marker, point, polyline, tileLayer } from 'leaflet';\nimport \"leaflet/dist/images/marker-shadow.png\";\n\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  options = {\n    layers: [\n        tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: 18, attribution: '...' }),\n        marker([ 36.250091, 59.914066])\n    ],\n    zoom: 8,\n    center: latLng(36.250091, 59.914066)\n};\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div \nstyle=\"height:650px\"\nleaflet \n[leafletOptions]=\"options\">\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-monitored',\n  templateUrl: './monitored.component.html',\n  styleUrls: ['./monitored.component.css']\n})\nexport class MonitoredComponent implements OnInit {\nexpantion:string=\"normal\";\nviewType:string=\"table\";\n\nSideType:string=\"\";\nsideOpen:boolean=true;\nshowfilter:boolean=true;\nshowUnitDetail:boolean=false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  expand(){\n    if(this.expantion==\"min\")\n    this.expantion=\"normal\";\n    else\n    this.expantion=\"max\";\n  }\n  collapse(){\n    if(this.expantion==\"max\")\n    this.expantion=\"normal\";\n    else\n    this.expantion=\"min\";\n  }\n\n  filterClick(){\n    this.showfilter=!this.showfilter;\n    if( this.showfilter)\n    {\n      this.SideType=\"\";\n    }\n    else\n    {\n      this.SideType=\"miniDetail\";\n    }\n    this.sideOpen=(this.showfilter||this.showUnitDetail);\n  }\n  unitSelected(selectedId:number){\n    this.showUnitDetail=!this.showUnitDetail;\n    if( this.showUnitDetail)\n    {\n      this.SideType=\"miniDetail\";\n    }\n    else\n    {\n      this.SideType=\"\";\n    }\n    this.sideOpen=(this.showfilter||this.showUnitDetail);\n    console.log(\"selectedId:\" +selectedId )\n  }\n  setContentView(type:string){\n    this.viewType=type;\n  }\n}\n","<mat-sidenav-container class=\"example-container\">\r\n    <mat-sidenav #sidenav mode=\"side\" opened=\"{{sideOpen}}\">\r\n     <p>salam</p>\r\n      <!-- <monitored-side [sideType]=\"SideType\"></monitored-side> -->\r\n    </mat-sidenav>\r\n    \r\n    <mat-sidenav-content>\r\n        <div id=\"container\" [ngClass]=\"expantion\" >    \r\n            <mat-toolbar>\r\n                <span>Monitored Units</span>\r\n\r\n                <div class=\"views\">\r\n                    <span> views: </span>\r\n                    <mat-icon (click)=\"setContentView('table')\" >view_list</mat-icon>\r\n                    <mat-icon (click)=\"setContentView('icon')\" >apps</mat-icon>\r\n                    <mat-icon (click)=\"setContentView('module')\" >view_week</mat-icon>\r\n                </div>\r\n\r\n                <div class=\"actions\">\r\n                    <mat-icon (click)=\"filterClick()\" class=\"filter\">filter_alt</mat-icon>\r\n                    <span class=\"filter\"> filter</span>\r\n                    <mat-icon (click)=\"collapse()\" >keyboard_arrow_left</mat-icon>\r\n                    <mat-icon (click)=\"expand()\">keyboard_arrow_right</mat-icon>\r\n                </div>\r\n            </mat-toolbar>   \r\n           <!-- <app-content [ViewType]=viewType (unitSelectionEvent)=\"unitSelected($event)\"></app-content> -->\r\n        </div>\r\n        <app-map  [ngClass]=\"expantion\" \r\n        style=\"height:650px\"\r\n        ></app-map>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n\r\n\r\n  <p>monitored works </p>","import { Component, OnInit } from '@angular/core';\n\nexport interface alarm {\nname:string ,\n Icon:string,\n checked:boolean\n}\n\n@Component({\n  selector: 'filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\nselected:string=\"all\";\nalarms:alarm[]=[\n  {checked:false ,name:'sutdown', Icon:'Sutdown' },\n  {checked:false ,name:'alarm'  , Icon:'Alarm'   },\n  {checked:true ,name:'Warning', Icon:'Warning' },\n  {checked:false ,name:'ECU'    , Icon:'ECU'     },\n  {checked:false ,name:'Fail'   , Icon:'Fail'    },\n  {checked:true ,name:'NoComm' , Icon:'NoComm'  },\n  {checked:false ,name:'Diabled', Icon:'Disabled'},\n  {checked:false ,name:'Online' , Icon:'Online'  },\n];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  unitsClicked(){\n    this.selected=\"units\";\n  }\n  groupsClicked(){\n    this.selected=\"groups\";\n  }\n  allClicked(){\n    this.selected=\"all\";\n  }\n  resetClicked(){\n    this.alarms.forEach(element => {\n      element.checked=false;      \n    });\n    this.selected=\"all\";\n  }\n}\n","<div class=\"container\">\n    <form  class=\"form\">\n        <fieldset>\n            <label>Show only</label>\n            <button  type=\"button\" [class.selected]=\"selected== 'groups'\"  (click)=\"groupsClicked()\" class=\"groups selected\" mat-flat-button color=\"warn\">\n                <mat-icon>library_books</mat-icon>\n            </button >\n            <button  type=\"button\" [class.selected]=\"selected== 'units'\"    (click)=\"unitsClicked()\"  class=\"units\" mat-flat-button color=\"warn\">\n                <mat-icon> av_timer </mat-icon>\n            </button >\n            <button  type=\"button\" [class.selected]=\"selected== 'all'\"      (click)=\"allClicked()\" class=\"all\" mat-flat-button color=\"warn\">\n                All\n            </button >\n        </fieldset>\n\n        <fieldset>\n            <label>Show groups</label>\n        </fieldset>\n        \n        <fieldset>\n            <label>Alarm type</label>\n            <div  class=\"alarms\">\n                <div class=\"alarmItem\" *ngFor=\"let alarm of alarms\">\n\n                   <input type=\"checkbox\" [checked]=\"alarm.checked\"   (change)=\"alarm.checked = !alarm.checked\">                    \n                    <span  class=\" material-icons {{alarm.Icon}} \">warning</span>  \n                    <span class=\"checkbox_title\">\n                        {{alarm.Icon}}\n                    </span>\n                </div>               \n            </div>\n        </fieldset>\n\n        <button  type=\"button\"       (click)=\"resetClicked()\" class=\"reset selected\" mat-flat-button color=\"warn\">\n            Reset filters\n        </button >\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'minidetails',\n  templateUrl: './minidetails.component.html',\n  styleUrls: ['./minidetails.component.css']\n})\nexport class MinidetailsComponent implements OnInit {\n  element: PeriodicElement | null=ELEMENT_DATA;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n\nexport interface PeriodicElement {\n  alarms:{name:string , Icon:string}[];\n  unitname: string;\n}\n\n\nconst ELEMENT_DATA: PeriodicElement=\n  {\n    unitname: 'unit 1',\n    alarms:[\n      {name:'*WrnServiceTime',Icon:'sutdown'},\n      {name:'*Emergency stop', Icon:'Sensor'},\n      {name:'*WrnServiceTime',Icon:'ECU'},\n    ]\n  };","<form class=\"filter-sort-panel\">\r\n    <button mat-button >\r\n        <mat-icon >cloud_download</mat-icon>\r\n    </button>\r\n    <button mat-button >\r\n        <mat-icon >show_chart</mat-icon>\r\n    </button>\r\n    <button mat-button  >\r\n        <mat-icon> av_timer </mat-icon>\r\n    </button>\r\n    <button mat-button >\r\n        <mat-icon>settings  </mat-icon>\r\n    </button>\r\n    \r\n \r\n</form> \r\n\r\n<p>\r\n    Disabled:\r\n</p>\r\n\r\n<p>\r\n    Breacker State:\r\n</p>\r\n\r\n<p>\r\n    Controller Mode:\r\n</p>\r\n\r\n\r\n<p>\r\n    Last Update:\r\n</p>\r\n<p>\r\n    <span class=\"material-icons alarmReset\">cast</span>2020-01-01 03:25:44\r\n</p>\r\n\r\n<p>\r\n    AlarmList:\r\n    <span class=\"material-icons alarmReset\">warning</span>\r\n</p>\r\n    \r\n<div class=\"alarms-Container\">\r\n    <div class=\"unit-alarmssss  {{alarm.Icon}}\" *ngFor=\"let alarm of element.alarms\">\r\n        <span id=\"detailIcon\" class=\"material-icons {{alarm.Icon}}\">warning</span>\r\n        <span id=\"detailIcon\" class=\"{{alarm.Icon}}\" >\r\n            {{alarm.name }}\r\n        </span>\r\n    </div>          \r\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'monitored-side',\n  templateUrl: './side.component.html',\n  styleUrls: ['./side.component.css']\n})\nexport class SideComponent implements OnInit {\n  @Input() sideType:string=\"\";\n\n  name:string=\"Unit 1\";\n filterVisible:boolean=false;\n unitMiniDetailVisible:boolean=false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  ngOnChanges(){\n    switch (this.sideType) {\n\n      case \"miniDetail\":\n        this.filterVisible=false;\n        this.unitMiniDetailVisible=true;\n        break;\n      default:\n        this.filterVisible=true;\n        this.unitMiniDetailVisible=false;\n        break;\n    }\n\n  }\n\n}\n","<form class=\"header\">\n    <h2 *ngIf=\"unitMiniDetailVisible\"> {{name}}</h2>\n    <h2 *ngIf=\"filterVisible\">Filter</h2>\n\n    <button mat-button  >\n        <mat-icon>close</mat-icon>\n    </button>  \n    \n</form> \n\n<minidetails *ngIf=\"unitMiniDetailVisible\"></minidetails>\n<filter *ngIf=\"filterVisible\"></filter>\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\nimport { Role, User } from '@app/_models';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  user: User;\r\n  show = true;\r\n  thenBlock: TemplateRef<any>|null = null;\r\n  @ViewChild('primaryBlock', {static: true}) primaryBlock: TemplateRef<any>|null = null;\r\n  @ViewChild('secondaryBlock', {static: true}) secondaryBlock: TemplateRef<any>|null = null;\r\n\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(\r\n    private breakpointObserver: BreakpointObserver,\r\n    private authenticationService: AuthenticationService) {\r\n      this.authenticationService.user.subscribe(x => \r\n        {\r\n          this.user = x\r\n        });\r\n\r\n      this.thenBlock = this.primaryBlock;\r\n    }\r\n  logout() {\r\n    this.authenticationService.logout();\r\n}\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\" >\r\n  <!-- <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n  [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n  [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n  [opened]=\"(isHandset$ | async) === false\">\r\n\r\n \r\n  <mat-nav-list>\r\n    <a *ngFor=\"let item of menuItems\" mat-list-item [routerLink]=\"'/'+item\"> {{item | titlecase}} </a>\r\n</mat-nav-list>\r\n\r\n</mat-sidenav> -->\r\n  <mat-sidenav-content>\r\n    <mat-toolbar class=\"secondary-toolbar\" color=\"primary\" >\r\n      <!-- <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\">\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button> -->\r\n       <span class=\"menu-spacer\"></span>\r\n        <a mat-button routerLink=\"/dashboard\"> <mat-icon>dashboard</mat-icon>Dashboard </a>\r\n        <a mat-button routerLink=\"/monitored-units\"> <mat-icon>receipt_long</mat-icon> Units </a>\r\n        <a mat-button routerLink=\"/trends\"> <mat-icon>trending_up</mat-icon> Analyse </a>\r\n        <a mat-button routerLink=\"/management/users\"> <mat-icon>fact_check</mat-icon> Management </a>\r\n        <a mat-button routerLink=\"/first-page\"> <mat-icon>settings</mat-icon> Settings </a>\r\n        <a mat-button routerLink=\"/first-page\"> <mat-icon>help</mat-icon> Help </a>\r\n        <span class=\"spacer\"></span>\r\n        <div *ngIf=\"user==null; else elseBlock\">\r\n          <a mat-button routerLink=\"/login\"> <mat-icon>login</mat-icon> login </a>\r\n        </div>\r\n        <ng-template #elseBlock>\r\n          <a mat-button (click)=\"logout()\"><mat-icon>logout</mat-icon>Logout</a>\r\n          <div mat-card-avatar class=\"example-header-image\"></div>\r\n        </ng-template>\r\n    \r\n        <!-- <a mat-button routerLink=\"/registration\"> <mat-icon>contact_page</mat-icon> registeration </a> -->\r\n    </mat-toolbar>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n","import { DateAdapter } from \"@angular/material/core\";\r\nimport * as jalaliMoment from \"jalali-moment\";\r\n\r\nexport const PERSIAN_DATE_FORMATS = {\r\n  parse: {\r\n    dateInput: \"jYYYY/jMM/jDD\"\r\n  },\r\n  display: {\r\n    dateInput: \"jYYYY/jMM/jDD\",\r\n    monthYearLabel: \"jYYYY jMMMM\",\r\n    dateA11yLabel: \"jYYYY/jMM/jDD\",\r\n    monthYearA11yLabel: \"jYYYY jMMMM\"\r\n  }\r\n};\r\n\r\nexport class MaterialPersianDateAdapter extends DateAdapter<jalaliMoment.Moment> {\r\n\r\n  constructor() {\r\n    super();\r\n    super.setLocale(\"fa\");\r\n  }\r\n\r\n  getYear(date: jalaliMoment.Moment): number {\r\n    return this.clone(date).jYear();\r\n  }\r\n\r\n  getMonth(date: jalaliMoment.Moment): number {\r\n    return this.clone(date).jMonth();\r\n  }\r\n\r\n  getDate(date: jalaliMoment.Moment): number {\r\n    return this.clone(date).jDate();\r\n  }\r\n\r\n  getDayOfWeek(date: jalaliMoment.Moment): number {\r\n    return this.clone(date).day();\r\n  }\r\n\r\n  getMonthNames(style: \"long\" | \"short\" | \"narrow\"): string[] {\r\n    switch (style) {\r\n      case \"long\":\r\n      case \"short\":\r\n        return jalaliMoment.localeData(\"fa\").jMonths().slice(0);\r\n      case \"narrow\":\r\n        return jalaliMoment.localeData(\"fa\").jMonthsShort().slice(0);\r\n    }\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    const valuesArray = Array(31);\r\n    for (let i = 0; i < 31; i++) {\r\n      valuesArray[i] = String(i + 1);\r\n    }\r\n    return valuesArray;\r\n  }\r\n\r\n  getDayOfWeekNames(style: \"long\" | \"short\" | \"narrow\"): string[] {\r\n    switch (style) {\r\n      case \"long\":\r\n        return jalaliMoment.localeData(\"fa\").weekdays().slice(0);\r\n      case \"short\":\r\n        return jalaliMoment.localeData(\"fa\").weekdaysShort().slice(0);\r\n      case \"narrow\":\r\n        return [\"ی\", \"د\", \"س\", \"چ\", \"پ\", \"ج\", \"ش\"];\r\n    }\r\n  }\r\n\r\n  getYearName(date: jalaliMoment.Moment): string {\r\n    return this.clone(date).jYear().toString();\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    return jalaliMoment.localeData(\"fa\").firstDayOfWeek();\r\n  }\r\n\r\n  getNumDaysInMonth(date: jalaliMoment.Moment): number {\r\n    return this.clone(date).jDaysInMonth();\r\n  }\r\n\r\n  clone(date: jalaliMoment.Moment): jalaliMoment.Moment {\r\n    return date.clone().locale(\"fa\");\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): jalaliMoment.Moment {\r\n    if (month < 0 || month > 11) {\r\n      throw Error(\r\n        `Invalid month index \"${month}\". Month index has to be between 0 and 11.`\r\n      );\r\n    }\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n    const result = jalaliMoment()\r\n      .jYear(year).jMonth(month).jDate(date)\r\n      .hours(0).minutes(0).seconds(0).milliseconds(0)\r\n      .locale(\"fa\");\r\n\r\n    if (this.getMonth(result) !== month) {\r\n      throw Error(`Invalid date ${date} for month with index ${month}.`);\r\n    }\r\n    if (!result.isValid()) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  today(): jalaliMoment.Moment {\r\n    return jalaliMoment().locale(\"fa\");\r\n  }\r\n\r\n  parse(value: any, parseFormat: string | string[]): jalaliMoment.Moment | null {\r\n    if (value && typeof value === \"string\") {\r\n      return jalaliMoment(value, parseFormat, \"fa\");\r\n    }\r\n    return value ? jalaliMoment(value).locale(\"fa\") : null;\r\n  }\r\n\r\n  format(date: jalaliMoment.Moment, displayFormat: string): string {\r\n    date = this.clone(date);\r\n    if (!this.isValid(date)) {\r\n      throw Error(\"JalaliMomentDateAdapter: Cannot format invalid date.\");\r\n    }\r\n    return date.format(displayFormat);\r\n  }\r\n\r\n  addCalendarYears(date: jalaliMoment.Moment, years: number): jalaliMoment.Moment {\r\n    return this.clone(date).add(years, \"jYear\");\r\n  }\r\n\r\n  addCalendarMonths(date: jalaliMoment.Moment, months: number): jalaliMoment.Moment {\r\n    return this.clone(date).add(months, \"jmonth\");\r\n  }\r\n\r\n  addCalendarDays(date: jalaliMoment.Moment, days: number): jalaliMoment.Moment {\r\n    return this.clone(date).add(days, \"jDay\");\r\n  }\r\n\r\n  toIso8601(date: jalaliMoment.Moment): string {\r\n    return this.clone(date).format();\r\n  }\r\n\r\n  isDateInstance(obj: any): boolean {\r\n    return jalaliMoment.isMoment(obj);\r\n  }\r\n\r\n  isValid(date: jalaliMoment.Moment): boolean {\r\n    return this.clone(date).isValid();\r\n  }\r\n\r\n  invalid(): jalaliMoment.Moment {\r\n    return jalaliMoment.invalid();\r\n  }\r\n\r\n  deserialize(value: any): jalaliMoment.Moment | null {\r\n    let date;\r\n    if (value instanceof Date) {\r\n      date = jalaliMoment(value);\r\n    }\r\n    if (typeof value === \"string\") {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n      date = jalaliMoment(value).locale(\"fa\");\r\n    }\r\n    if (date && this.isValid(date)) {\r\n      return date;\r\n    }\r\n    return super.deserialize(value);\r\n  }\r\n}","import {SelectionModel} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  groupType: string;\n  count: number;\n  \n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {groupType: 'group_work', name: 'test', count: 1},\n  {groupType: 'group_work', name: 'Testing ',   count: 4},\n  {groupType: 'grade', name: 'webgroupsTest',  count: 6},\n  {groupType: 'color_lens', name: 'WebGmm',count: 9},\n  \n];\n\n/**\n * @title Table with selection\n */\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent  {\n  displayedColumns: string[] = ['name', 'count'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  selection = new SelectionModel<PeriodicElement>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: PeriodicElement): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.groupType + 1}`;\n  }\n}","<mat-card>\n    <mat-card-header>\n        <mat-card-title>\n            <span>\n                <mat-icon>list</mat-icon>\n                Group List\n            </span>\n                  \n        </mat-card-title>\n    </mat-card-header>\n    <mat-card-content >\n\n          \n        <div id=\"main\">\n            <button mat-button >\n                <mat-icon>search</mat-icon>\n            </button>\n            <button mat-button >\n                <mat-icon>keyboard_arrow_down</mat-icon>\n            </button>\n            <button mat-button >\n                <span class=\"material-icons material-icons-outlined\">\n                    library_add\n                    </span>\n            </button>\n        </div>\n\n\n\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n        \n\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell class=\"nameCulomn\" *matCellDef=\"let element\"><mat-icon>{{element.groupType}}</mat-icon>{{element.name}} </td>\n            </ng-container>\n          \n            <!-- count Column -->\n            <ng-container matColumnDef=\"count\">\n              <th mat-header-cell *matHeaderCellDef> count </th>\n              <td mat-cell class=\"countCulomn\" *matCellDef=\"let element\"> {{element.count}} </td>\n            </ng-container>\n          \n           \n          \n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidepanel',\r\n  templateUrl: './sidepanel.component.html',\r\n  styleUrls: ['./sidepanel.component.sass']\r\n})\r\nexport class SidepanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <app-card title=\"alarmdsdtitle\"><app-group-list></app-group-list></app-card> -->\n<app-groups></app-groups>","import * as moment from 'moment';\r\nimport { SeriesInfo } from '../../trendInfo';\r\n// Named function\r\nfunction Convertor(seriasData,seriesInfo:SeriesInfo) {\r\n    let series=  []\r\n    var  data = [];\r\n\r\n    //const metrics= [\"Oil_P\" ,\"Water_T\" ];\r\n    const metrics= [];\r\n\r\n    for(var m = 0; m < seriesInfo.metricsInfo.length; m++) {\r\n        metrics[m] =seriesInfo.metricsInfo[m][\"Measurment\"];\r\n    }\r\n\r\n    // initialize array\r\n    for(var j = 0; j < metrics.length; j++) {\r\n        data[j] = [];\r\n    }\r\n\r\n    for (let  i = 0; i < seriasData.length; i++) {\r\n\r\n        for (let  f = 0; f < metrics.length; f++){\r\n            var obj3 = {\r\n                x: moment(seriasData[i].time).format('MM/DD/YYYY HH:mm:ss'),\r\n                y: seriasData[i][metrics[f]]\r\n            };\r\n        data[f].push(obj3);\r\n        }\r\n    }\r\n    \r\n    for (let  f = 0; f < metrics.length; f++){\r\n        series.push(\r\n            { data: data[f], label:metrics[f] }\r\n        );\r\n    }\r\n    return series;\r\n}\r\n\r\nexport const DataPreparation=Convertor;","import {DataPreparation} from './DataPreparation';\r\nimport {IRange} from '../../range'\r\nimport { Component, OnInit , Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport 'chartjs-plugin-zoom'\r\n\r\nimport { SeriesData, SeriesInfo } from '../../trendInfo';\r\nimport { trendViewComponent } from '../trendView.Cmponent';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TimeRangeDilaogueComponent } from '../time-range-dilaogue/time-range-dilaogue.component';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-chart-view',\r\n  templateUrl: './chart-view.component.html',\r\n  styleUrls: ['./chart-view.component.css']\r\n})\r\nexport class ChartViewComponent implements trendViewComponent, OnInit {\r\n\r\n  @Output() RangesEvent = new EventEmitter<IRange>();\r\n\r\n  series: SeriesInfo;\r\n  metricsData: SeriesData;\r\n  \r\n  Ranges = [\r\n     { value: 1, label: 'Today'},\r\n     { value: 2, label: 'Last 3 Days'},\r\n     { value: 3, label: 'Last Week'},\r\n    //  { value: 4, label: 'Last Month'},\r\n    //  { value: 5, label: 'Last 2 Month'},\r\n    //  { value: 6, label: 'Last 3 Month'},\r\n    //  { value: 7, label: 'Last 6 Month'},\r\n    //  { value: 8, label: 'Last 9 Month'},\r\n    //  { value: 9, label: 'Last 1 Year'},\r\n     { value: 10, label: 'From - To' }\r\n    ];\r\n    Types=[\r\n      { value:  \"line\", label: 'Line'},\r\n      { value:  \"bar\", label: 'Bar'},\r\n      { value:  \"heatmap\", label: 'Heat map'},\r\n    ]; \r\n    Tools=[\r\n      { value: 1, label: 'Connect all points'},\r\n      { value: 2, label: 'Trim visible data'},\r\n      { value: 2, label: 'Ocilloscope mode'},\r\n      { value: 2, label: 'Reload all data'},\r\n    ];\r\n    toppingList: string[] = [\r\n      'Show points',\r\n      'Multiple axis', \r\n      'No legend', \r\n      'Short legend', \r\n      'Full legend',\r\n      'Hide tooltips',\r\n      'Show full screen'\r\n    ];\r\n    toppings = new FormControl();\r\n    SelectedRange=this.Ranges[1];\r\n    SelectedType=this.Types[1];\r\n  form: FormGroup;\r\n  formGroup :FormGroup ; \r\n\r\n  public ChartType: ChartType = 'line';\r\n  public ChartLegend = true;\r\n  public ChartPlugins = [];  \r\n  public ChartData: ChartDataSets[]= [\r\n    { data: [], label: '' }\r\n  ];\r\n  public ChartOptions: ChartOptions = {\r\n    responsive: true, \r\n    title: {\r\n    display: false,\r\n    text: 'Unit 1'\r\n    },\r\n\r\n    tooltips: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n              return  Number(tooltipItem.yLabel).toFixed(2).replace(/./g, function(c, i, a) {\r\n                  return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n              });\r\n          }\r\n        }\r\n    },\r\n    scales: {\r\n          xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                      parser: 'MM/DD/YYYY HH:mm:ss',\r\n                      // round: 'minute',\r\n                      tooltipFormat: 'll HH:mm:ss'\r\n                  },\r\n                  scaleLabel: {\r\n                        display: true,\r\n                        labelString: ''\r\n                    },\r\n                    ticks: {\r\n                          maxRotation: 0\r\n                      }\r\n                  }],\r\n          yAxes: [{\r\n                scaleLabel: {\r\n                      display: true,\r\n                      //labelString: 'Power(Kw)'\r\n                  }\r\n              }]\r\n    },\r\n    plugins: {\r\n          zoom: {\r\n            // Container for pan options\r\n                pan: {\r\n                  // Boolean to enable panning\r\n                  enabled: true,\r\n\r\n                  // Panning directions. Remove the appropriate direction to disable\r\n                  // Eg. 'y' would only allow panning in the y direction\r\n                  // A function that is called as the user is panning and returns the\r\n                  // available directions can also be used:\r\n                  //   mode: function({ chart }) {\r\n                  //     return 'xy';\r\n                  //   },\r\n                  mode: 'x',\r\n\r\n                  rangeMin: {\r\n                    // Format of min pan range depends on scale type\r\n                    x: null,\r\n                    y: null\r\n                  },\r\n                  rangeMax: {\r\n                    // Format of max pan range depends on scale type\r\n                    x: null,\r\n                    y: null\r\n                  },\r\n\r\n                  // On category scale, factor of pan velocity\r\n                  speed: 20,\r\n\r\n                  // Minimal pan distance required before actually applying pan\r\n                  threshold: 10,\r\n\r\n                  // Function called while the user is panning\r\n                  onPan: function({chart}) { console.log(`I'm panning!!!`); },\r\n                  // Function called once panning is completed\r\n                  onPanComplete: function({chart}) { console.log(`I was panned!!!`); }\r\n                },\r\n                zoom: {\r\n                      enabled: true,\r\n                      // Enable drag-to-zoom behavior\r\n                      drag: false,\r\n                      mode: 'x',\r\n                      speed: 0.1\r\n                  }\r\n              }\r\n    }\r\n  };\r\n  constructor(private fb: FormBuilder,\r\n    public dialog: MatDialog) { \r\n\r\n      }\r\n  selectedRange: number;\r\n  selectedType: string='line';\r\n  onTypeSelection(type ){\r\n    console.log(type +\"  Type Selected\");\r\n    this.ChartType = <ChartType>type;\r\n  }\r\n  onRangeSelection() {\r\n    var range:IRange;\r\n    console.log(\"selectedRange: \"+this.selectedRange);\r\n\r\n\r\n\r\n    switch (this.selectedRange) {\r\n     case 1://Today\r\n            range={label:\"Today\",\r\n            endTime:moment().valueOf(),\r\n            startTime: moment().subtract(1,'d').valueOf()\r\n            };\r\n            this.RangesEvent.emit(range);\r\n          break;\r\n      case 2://Last 3 Days\r\n            range={label:\"Last 3 Days\",\r\n            endTime:moment().valueOf(),\r\n            startTime: moment().subtract(3,'d').valueOf()\r\n            };\r\n            this.RangesEvent.emit(range);\r\n          break;\r\n      case 3://Last Week\r\n            range={label:\"Last Week\",\r\n            endTime:moment().valueOf(),\r\n            startTime: moment().subtract(7,'d').valueOf()\r\n            };\r\n            this.RangesEvent.emit(range);\r\n          break;\r\n      case 4://Last Month\r\n            range={label:\"Last Month\",\r\n            endTime:moment().valueOf(),\r\n            startTime: moment().subtract(1,'months').valueOf()\r\n            };\r\n            this.RangesEvent.emit(range);\r\n          break;\r\n      case 5://Last 2 Month\r\n            range={label:\"Last 2 Month\",\r\n            endTime:moment().valueOf(),\r\n            startTime: moment().subtract(2,'months').valueOf()\r\n            };\r\n            this.RangesEvent.emit(range);\r\n          break;\r\n      case 6://Last 3 Month\r\n            range={label:\"Last 3 Month\",\r\n            endTime:moment().valueOf(),\r\n            startTime: moment().subtract(3,'months').valueOf()\r\n            };\r\n            this.RangesEvent.emit(range);\r\n          break;\r\n      case 7://Last 6 Month\r\n            range={label:\"Last 6 Month\",\r\n            endTime:moment().valueOf(),\r\n            startTime: moment().subtract(6,'months').valueOf()\r\n            };\r\n            this.RangesEvent.emit(range);\r\n          break;\r\n      case 8://Last 9 Month\r\n            range={label:\"Last 9 Month\",\r\n            endTime:moment().valueOf(),\r\n            startTime: moment().subtract(9,'months').valueOf()\r\n            };\r\n            this.RangesEvent.emit(range);\r\n          break;\r\n      case 9://Last 1 Year\r\n            range={label:\"Last 1 Year\",\r\n            endTime:moment().valueOf(),\r\n            startTime: moment().subtract(1,'years').valueOf()\r\n            };\r\n            this.RangesEvent.emit(range);\r\n          break;\r\n      case 10://From - To\r\n            const dialogRef = this.dialog.open(TimeRangeDilaogueComponent, {\r\n              data: {name: \"sedf\", type: \"user\"}\r\n            });\r\n            \r\n            dialogRef.afterClosed().subscribe(result => {\r\n              console.log('The dialog was closed with this result: '+result.Result);\r\n              if(result.Result)\r\n              {\r\n                range={label:\"From - To\",\r\n                endTime:result.EndTime,\r\n                startTime:result.StartTime\r\n                };\r\n                this.RangesEvent.emit(range);\r\n              }\r\n            });       \r\n            break;\r\n            \r\n      default:\r\n          console.log(\"No such Range exists!\");\r\n          break;\r\n    }//switch\r\n  }//onRangeSelection\r\n                    \r\n                    \r\nngOnInit(): void {\r\n  if((this.metricsData!=null) && (this.series.metricsInfo.length!=0))\r\n  this.ChartData = DataPreparation(this.metricsData,this.series);\r\n   \r\n  this.form = this.fb.group({\r\n      first: [],\r\n      second: []\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"bulckActions\">\r\n    <div  class=\"form\">\r\n        <mat-form-field  >\r\n            <mat-label>\r\n                <mat-icon >calendar_today </mat-icon> Range</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedRange\" (ngModelChange)=\"onRangeSelection()\">\r\n                    <mat-option *ngFor=\"let range of Ranges\" [value]=\"range.value\">\r\n                        {{range.label}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field  >\r\n                <mat-label>\r\n                    <mat-icon>timeline</mat-icon> Chart Type</mat-label>\r\n                <mat-select  [(ngModel)]=\"selectedType\" (ngModelChange)=\"onTypeSelection(selectedType)\" >\r\n                    <mat-option *ngFor=\"let type of Types\" [value]=\"type.value\">\r\n                        {{type.label}}\r\n                      </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n                \r\n                          \r\n            <mat-form-field  >\r\n                <mat-label>\r\n                    <mat-icon >timeline</mat-icon> Tools</mat-label>\r\n                <mat-select>\r\n                    <mat-option *ngFor=\"let type of Tools\" [value]=\"type.value\">\r\n                        {{type.label}}\r\n                      </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            \r\n              <mat-form-field >\r\n                <mat-label>Display</mat-label>\r\n                <mat-select [formControl]=\"toppings\" multiple>\r\n                  <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <button mat-button  >\r\n                <mat-icon> fact_check</mat-icon>\r\n                Uncheck all values\r\n            </button>\r\n        </div>\r\n  </div>\r\n  <div class=\"Chart\">\r\n      \r\n      <canvas baseChart\r\n      [datasets]=\"ChartData\"     \r\n      [options]=\"ChartOptions\"\r\n      [plugins]=\"ChartPlugins\"\r\n      [legend]=\"ChartLegend\"\r\n      [chartType]=\"ChartType\"\r\n      >\r\n    </canvas> \r\n</div>\r\n\r\n\r\n\r\n<form class=\"list-actions2\">\r\n    <button mat-button >\r\n        <mat-icon >zoom_in</mat-icon>\r\n    </button>\r\n    <button mat-button >\r\n        <mat-icon >zoom_out</mat-icon>\r\n    </button>\r\n    <button mat-button >\r\n        <mat-icon >youtube_searched_for</mat-icon>\r\n    </button>\r\n    <button mat-button  >\r\n        <mat-icon> arrow_back </mat-icon>\r\n    </button>\r\n    <button mat-button  >\r\n        <mat-icon> arrow_forward </mat-icon>\r\n    </button>\r\n</form> \r\n\r\n\r\n","import { Component, ComponentFactoryResolver, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { SeriesInfo } from '../trendInfo';\r\nimport { TrendsService } from '../trends.service';\r\nimport { ChartViewComponent } from './chart-view/chart-view.component';\r\nimport { TableViewComponent } from './table-view/table-view.component';\r\nimport { TrendsViewDirective } from './trends-view.directive';\r\nimport { trendViewComponent } from './trendView.Cmponent';\r\n\r\n@Component({\r\n  selector: 'trends-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.css']\r\n})\r\nexport class TrendsContentComponent implements OnInit {\r\n  series : SeriesInfo;\r\n  seriesData:any;\r\n  @Input() ViewType: string;\r\n  @ViewChild(TrendsViewDirective, {static: true}) trendsView: TrendsViewDirective;\r\n  \r\n  addItem(newItem: any) {\r\n    console.log(\"Parent: \"+newItem);\r\n  }\r\n  \r\n  constructor(public _trendsService:TrendsService,\r\n    private componentFactoryResolver: ComponentFactoryResolver) {\r\n    this.series=_trendsService.getSelected();\r\n    //this.seriesData=\r\n    this.ReadSeriesData();\r\n\r\n   }\r\n   ReadSeriesData(): void {\r\n   this._trendsService.getSeriesData(this.series)\r\n    .subscribe(\r\n      data => {\r\n        this.seriesData = data;\r\n        console.log(data);\r\n        this.LoadView(this.ViewType) ;\r\n      },\r\n      error => {\r\n        this.seriesData =[\r\n         {\r\n           metricsInfo:[],\r\n           startDate: null,\r\n           endDate: null \r\n          }\r\n        ];\r\n        console.log(error);\r\n      });\r\n\r\n    \r\n  }\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  ngOnChanges() {\r\n    this.LoadView(this.ViewType) ;\r\n    // You can also use categoryId.previousValue and \r\n    // categoryId.firstChange for comparing old and new values\r\n    \r\n}\r\n  LoadView(Type:string) {\r\n    const viewContainerRef = this.trendsView.viewContainerRef;\r\n     viewContainerRef.clear();\r\n\r\n    let componentFactory : any;//this.componentFactoryResolver.resolveComponentFactory(TableviewComponent);\r\n    switch(Type) { \r\n      case \"table\": { \r\n           componentFactory = this.componentFactoryResolver.resolveComponentFactory(TableViewComponent);\r\n        //statements; \r\n        break; \r\n      } \r\n      default: { \r\n         componentFactory = this.componentFactoryResolver.resolveComponentFactory(ChartViewComponent);\r\n        // statements; \r\n        break; \r\n      } \r\n   } \r\n   const componentRef = viewContainerRef.createComponent<trendViewComponent>(componentFactory);\r\n\r\n    componentRef.instance.series = this.series;\r\n    componentRef.instance.metricsData = this.seriesData;\r\n    \r\n    componentRef.instance.RangesEvent.subscribe(val => {\r\n      console.log(\"RangesEvent value: \"+val)\r\n      this.series.startDate=val[\"startTime\"];\r\n      this.series.endDate=val[\"endTime\"];\r\n      this.ReadSeriesData();\r\n    });\r\n  \r\n  }\r\n}\r\n","<ng-template trendsView ></ng-template>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { IRange } from '../../range';\r\nimport { SeriesData, SeriesInfo } from '../../trendInfo';\r\nimport{trendViewComponent} from '../trendView.Cmponent'\r\n@Component({\r\n  selector: 'app-table-view',\r\n  templateUrl: './table-view.component.html',\r\n  styleUrls: ['./table-view.component.css']\r\n})\r\nexport class TableViewComponent implements trendViewComponent, OnInit {\r\n  @Output() RangesEvent = new EventEmitter<IRange>();\r\n\r\n  constructor() { }\r\n\r\n\r\n  series: SeriesInfo;\r\n  metricsData: SeriesData;\r\n  Ranges = [\r\n    { value: 1, label: 'Today'},\r\n    { value: 2, label: 'Last 3 Days'},\r\n    { value: 2, label: 'Last Week'},\r\n    { value: 2, label: 'Last Month'},\r\n    { value: 2, label: 'Last 2 Month'},\r\n    { value: 2, label: 'Last 3 Month'},\r\n    { value: 2, label: 'Last 6 Month'},\r\n    { value: 2, label: 'Last 9 Month'},\r\n    { value: 2, label: 'Last 1 Year'},\r\n    { value: 3, label: 'From - To' }\r\n   ];\r\n   Tools=[\r\n     { value: 1, label: 'Reload all data'},\r\n    { value: 2, label: 'Export data as XLSX'},\r\n  ];\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<form class=\"list-actions2\">\r\n\r\n  <mat-form-field  >\r\n    <mat-label>\r\n        <mat-icon >calendar_today </mat-icon> Range</mat-label>\r\n        <mat-select>\r\n            <mat-option *ngFor=\"let range of Ranges\" [value]=\"range.value\">\r\n                {{range.label}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    \r\n      <mat-form-field    class=\"ShiftLeft\">\r\n        <mat-label>\r\n            <mat-icon >timeline</mat-icon> Tools</mat-label>\r\n        <mat-select>\r\n            <mat-option *ngFor=\"let type of Tools\" [value]=\"type.value\">\r\n                {{type.label}}\r\n              </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n  <button mat-button  >\r\n      <mat-icon> arrow_back </mat-icon>\r\n  </button>\r\n  <button mat-button  >\r\n      <mat-icon> arrow_forward </mat-icon>\r\n  </button>\r\n</form> \r\n\r\n<ul>\r\n    <li *ngFor=\"let item of metricsData; index as i;\">\r\n        {{item.time}}\r\n      </li>\r\n</ul>","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n\r\nimport  * as moment from 'jalali-moment';\r\nimport  {Moment} from 'jalali-moment';\r\nimport { DatePickerComponent } from 'ng2-jalali-date-picker';\r\nexport interface DialogData {\r\n  type: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-time-range-dilaogue',\r\n  templateUrl: './time-range-dilaogue.component.html',\r\n  styleUrls: ['./time-range-dilaogue.component.css']\r\n})\r\nexport class TimeRangeDilaogueComponent implements OnInit {\r\n  StartTime:Moment =  moment().subtract(6,'h');\r\n  EndTime:Moment = moment();\r\n\r\n  datePickerConfig = {\r\n    drops: 'up',\r\n    format: 'YY/M/D',\r\n    showGoToCurrent: true\r\n}\r\n@ViewChild('Start') datePickerStart: DatePickerComponent;\r\n@ViewChild('End') datePickerEnd: DatePickerComponent;\r\n  \r\n  constructor( public dialogRef: MatDialogRef<TimeRangeDilaogueComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    }\r\n    \r\n    ngOnInit(): void {}\r\n      onNoClick(): void {\r\n        this.dialogRef.close({'Result':false,'StartTime':this.StartTime.valueOf(),'EndTime':this.EndTime.valueOf()});\r\n  }\r\n  onYesClick(): void {\r\n    console.log(\"EndTime: \"+this.EndTime)\r\n    console.log(\"StartTime: \"+this.StartTime)\r\n    this.dialogRef.close({'Result':true,'StartTime':this.StartTime.valueOf(),'EndTime':this.EndTime.valueOf()});\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title> Select Time intervals.</h2>\r\n\r\n<div mat-dialog-content>\r\n\r\n  \r\n  <div class=\"pickers\">\r\n    <div >\r\n      <p>Start Time</p>\r\n      <dp-day-time-calendar  #Start  [(ngModel)]=\"StartTime\" theme=\"dp-material\"\r\n      [config]=\"datePickerConfig\">\r\n      </dp-day-time-calendar>\r\n    </div>\r\n  \r\n    <div >\r\n      <p>End Time</p>\r\n      <dp-day-time-calendar  #End  [(ngModel)]=\"EndTime\" theme=\"dp-material\"\r\n      [config]=\"datePickerConfig\">\r\n      </dp-day-time-calendar>\r\n    </div>\r\n  </div>\r\n    \r\n  </div>\r\n\r\n  <div mat-dialog-actions class=\"example-button-row\">\r\n    <button mat-raised-button (click)=\"onYesClick()\" color=\"warn\">Yes</button>\r\n    <button mat-raised-button  (click)=\"onNoClick()\" cdkFocusInitial color=\"warn\">No</button>\r\n  </div>","import { Directive, EventEmitter, Output, ViewContainerRef } from '@angular/core';\r\nimport { IRange } from '../range';\r\n\r\n@Directive({\r\n  selector: '[trendsView]'\r\n})\r\nexport class TrendsViewDirective {\r\n\r\n  @Output() RangesEvent : EventEmitter<IRange> = new EventEmitter<IRange>();\r\n \r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n\r\n}\r\n","import { TrendInfo } from './trendInfo';\r\n\r\nexport const METRICS_classic:string[]=[\r\n  \"GAC_SP\",          //10\r\n  \"GAC_FB\",          //11\r\n  \"GAC_PWM\",         //12\r\n  \"GAC_Current\",     //13\r\n  \"RPM_SP\",          //14\r\n  \"RPM_FB\",          //15\r\n  \"RPM_Shifter\",     //16\r\n  \"MAP_p\",           //17\r\n  \"MAP_T\",           //18\r\n  \"Thermocouple1\",   //19\r\n  \"Thermocouple2\",   //20\r\n  \"Oil_P\",           //21\r\n  \"Water_T\",         //22\r\n  \"Advance\",         //23\r\n  \"IgnitionTime\",    //24\r\n  \"Power\",           //31\r\n  \"RunT_H\",          //32\r\n  \"RunT_L\",          //33\r\n  ];\r\n\r\n  export const METRICS_minit:string[]=[\r\n    \"Gen_V_L1-N\",\r\n    \"Gen_V_L2-N\",\r\n    \"Gen_V_L3-N\",\r\n    \"Gen_V_L1-L2\",\r\n    \"Gen_V_L2-L3\",\r\n    \"Gen_V_L3-L1\",\r\n    \"Gen_A_L1\",\r\n    \"Gen_A_L2\",\r\n    \"Gen_A_L3\",\r\n    \"RPM\",\r\n    \"Gen_Freq\",\r\n    \"W-TerminalFreq\",\r\n    \"Gen_kW\",\r\n    \"Gen_kW_L1\",\r\n    \"Gen_kW_L2\",\r\n    \"Gen_kW_L3\",\r\n    \"Gen_kVAr\",\r\n    \"Gen_kVAr_L1\",\r\n    \"Gen_kVAr_L2\",\r\n    \"Gen_kVAr_L3\",\r\n    \"Gen_PF\",\r\n    \"Gen_PF_L1\",\r\n    \"Gen_PF_L2\",\r\n    \"Gen_PF_L3\",\r\n    \"Battery_Volts\",\r\n    \"Oil_Pressure\",\r\n    \"water_temp\",\r\n    \"ECU_State\",\r\n    \"Run_Hours1\",\r\n    \"Run_Hours2\",\r\n    \"Energy_kWh1\",\r\n    \"Energy_kWh2\",\r\n    ];\r\n  \r\n    export const METRICS_amf25:string[]=[\r\n      \"Gen_V_L1-N\"    , //1\r\n      \"Gen_V_L2-N\"    , //2\r\n      \"Gen_V_L3-N\"    , //3\r\n      \"Gen_V_L1-L2\"    , //5\r\n      \"Gen_V_L2-L3\"    , //6\r\n      \"Gen_V_L3-L1\"    , //7\r\n      \"Load_A_L1\"      , //8\r\n      \"Load_A_L2\"      , //9\r\n      \"Load_A_L3\"      , //10\r\n      \"RPM\"            , //11\r\n      \"Gen_Freq\"       , //12\r\n      \"Load_kW\"        , //14\r\n      \"Load_kW_L1\"     , //15\r\n      \"Load_kW_L2\"     , //16\r\n      \"Load_kW_L3\"     , //17\r\n      \"Load_kVAr\"      , //19\r\n      \"Load_kVAr_L1\"   , //20\r\n      \"Load_kVAr_L2\"   , //21\r\n      \"Load_kVAr_L3\"   , //22\r\n      \"Load_PF\"        , //23\r\n      \"Load_PF_L1\"     , //24\r\n      \"Load_PF_L2\"     , //25\r\n      \"Load_PF_L3\"     , //26\r\n      \"Load_Char\"      , //28\r\n      \"Load_Char_L1\"   , //29\r\n      \"Load_Char_L2\"   , //30\r\n      \"Load_Char_L3\"   , //31\r\n      \"Load_kVA\"       , //32\r\n      \"Load_kVA_L1\"    , //33\r\n      \"Load_kVA_L2\"    , //34\r\n      \"Load_kVA_L3\"    , //35\r\n      \"Earth_Fault\"    , //48\r\n      \"ECU_State\"      , //119\r\n      \"DPF1_Soot_Load\" , //183\r\n      \"DPF1_Ash_Load\"  , //184\r\n      \"Engine_Speed\"   , //187\r\n      \"FuelRate\"       , //188\r\n      \"CoolantTemp\"    , //189\r\n      \"Intake_Temp\"    , //190\r\n      \"OilPress\"       , //191\r\n      \"Boost_Press\"    , //192\r\n      \"Load\"           , //193\r\n      \"Oil_Temp\"       , //194\r\n      \"ECU-AIN_9\"      , //195\r\n      \"FuelUsed_1\"     , //203\r\n      \"FuelUsed_2\"     , //204\r\n      \"SpeedReq_RPM\"   , //207\r\n      \"Speed_request\"  , //208\r\n      \"ECU_FreqSelect0\", //209\r\n      \"Run_Hours_1\"    , //3001\r\n      \"Run_Hours_2\"    , //3002\r\n      \"Maintenance\"    , //3004\r\n      \"Num_Starts\"     , //3005\r\n      \"Genset_kWh_1\"   , //3006\r\n      \"Genset_kWh_2\"   , //3007\r\n      \"Genset_kVArh_1\" , //3008\r\n      \"Genset_kVArh_2\" , //3009\r\n      \"Num_E-Stops_1\"  , //3010\r\n      \"Num_E-Stops_2\"  , //3011\r\n      \"Shutdowns_1\"    , //3012\r\n      \"Shutdowns_2\"    , //3013\r\n      \"Prestart_Time\"  , //3034\r\n      \"Starting_RPM\"   , //3035\r\n      \"MaxCrank_Time\"  , //3036\r\n      \"CrnkFail_Pause\" , //3037\r\n      \"Crank_Attempts\" , //3038\r\n      \"Min_Stab_Time\"  , //3039\r\n      \"Max_Stab_Time\"  , //3040\r\n      \"Cooling_Time\"   , //3041\r\n      \"Idle_Time\"      , //3042\r\n      \"Fuel_Solenoid\"  , //3043\r\n      \"Starting_Oil_P\" , //3044\r\n      \"D+_Function\"    , //3045\r\n      \"Stop_Time\"      , //3046\r\n      \"Cooling_Speed\"  , //3047\r\n      \"ECU_FreqSelect\" , //3048\r\n      \"ECU_SpeedAdj\"   , //3049\r\n      \"Fuel_Pump_ON\"   , //3065\r\n      \"Fuel_Pump_OFF\"  , //3066\r\n      \"PowerSwitch_ON\" , //3179\r\n      \"PowerSwitchOFF\" , //3180\r\n      \"TempSwitch_ON\"  , //3189\r\n      \"TempSwitch_OFF\" , //3190\r\n      \"MaxFuelDrop\"    , //3208\r\n      \"TotFuelConsum_1\", //3209\r\n      \"TotFuelConsum_2\", //3210\r\n      \"FuelTankVolume\" , //3212\r\n      \"Mains_kWh_1\"    , //3213\r\n      \"Mains_kWh_2\"    , //3214\r\n      \"Mains_kVArh_1\"  , //3215\r\n      \"Mains_kVArh_2\"  , //3216\r\n      \"Louver_Time\"    , //3239\r\n      \"D+WrnThreshold\" , //3242\r\n      ];","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MetricInfo, SeriesInfo, TrendInfo, UnitInfo } from '../trendInfo';\r\nimport { TrendsService } from '../trends.service';\r\n\r\n@Component({\r\n  selector: 'trends-side',\r\n  templateUrl: './side.component.html',\r\n  styleUrls: ['./side.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class SideComponent implements OnInit {\r\n\r\n  dataSource : TrendInfo[];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  selectedUnit:UnitInfo=null; \r\n  selectedUnitMetrics: string[]=[];\r\n\r\n  columnsToDisplay = ['GroupName'];\r\n  expandedElement: UnitInfo[];\r\n\r\n  \r\n  trends : TrendInfo[];\r\n  trendsService:TrendsService;\r\n  constructor(_trendsService:TrendsService) { \r\n    this.trendsService=_trendsService;\r\n    \r\n    this.trendsService.getTrendsInfos().subscribe(data=>{\r\n      this.trends= data;\r\n      this.dataSource =this.trends;\r\n      console.log(data);\r\n    },\r\n    error => {\r\n           console.log(error);\r\n    \r\n    })\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.dataSource =  this.trends;\r\n\r\n  }\r\n  selecteUnit(item:UnitInfo){\r\n    if(this.selectedUnit==item)\r\n    this.selectedUnit=null;\r\n    else\r\n    {\r\n      this.selectedUnit=item;\r\n      this.selectedUnitMetrics=this.trendsService.getUinitMetric(item.deviceType);\r\n    }\r\n\r\n  }\r\n  selectedMetric(item:String,checked:boolean){\r\n  var   metric:MetricInfo={\r\n      Unit:this.selectedUnit,\r\n      Measurment:item,\r\n  };\r\n\r\n    if(checked)\r\n    this.trendsService.addToList(metric);\r\n    else\r\n    this.trendsService.removeFromList(metric);\r\n  }\r\nonChange(event, item:SeriesInfo) {\r\n}\r\n\r\n\r\n}","<form class=\"header\">\r\n    <h2 > Trends unit list</h2>\r\n    <button mat-button  >\r\n        <mat-icon>close</mat-icon>\r\n    </button>  \r\n    \r\n</form> \r\n\r\n<form class=\"list-actions1\">\r\n    <button mat-button >\r\n        <mat-icon > av_timer </mat-icon>\r\n    </button>\r\n    <button mat-button >\r\n        <mat-icon > av_timer </mat-icon>\r\n    </button>\r\n\r\n</form> \r\n<form class=\"list-actions2\">\r\n    <button mat-button >\r\n        <mat-icon >search</mat-icon>\r\n    </button>\r\n    <button mat-button >\r\n        <mat-icon >show_chart</mat-icon>\r\n    </button>\r\n    <button mat-button  >\r\n        <mat-icon> av_timer </mat-icon>\r\n    </button>\r\n</form> \r\n\r\n<table mat-table\r\n       [dataSource]=\"dataSource\" multiTemplateDataRows\r\n       class=\"mat-elevation-z8\">\r\n\r\n  <!-- <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\r\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n    <td class=\"name-column\" mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\r\n  </ng-container>   -->\r\n\r\n\r\n  \r\n  <!-- GroupName Column -->\r\n  <ng-container matColumnDef=\"GroupName\">\r\n    <th mat-header-cell *matHeaderCellDef></th>\r\n    <td class=\"name-column\" mat-cell *matCellDef=\"let element\"> {{element.GroupName}} </td>\r\n  </ng-container>\r\n    \r\n\r\n    <!-- Id Column -->\r\n    <!-- <ng-container matColumnDef=\"unitname\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Unit Name</th>\r\n      <td  class=\"left-align red-underline\" mat-cell *matCellDef=\"let row\">{{row.unitname}}</td>\r\n    </ng-container> -->\r\n<!-- \r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Comment</th>\r\n      <td class=\"left-align \"  mat-cell *matCellDef=\"let row\">{{row.name}} <fa-icon [icon]=\"filmIcon\"></fa-icon></td>\r\n    </ng-container> -->\r\n\r\n\r\n\r\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n  <ng-container matColumnDef=\"expandedDetail\">\r\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n      <div class=\"example-element-detail\"\r\n           [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n        <div>        \r\n            <div  *ngFor=\"let unit of element.UnitsInfo\">\r\n              <div>\r\n                <span  class=\"name-column\" (click)=\"selecteUnit(unit)\"  routerLinkActive=\"active-link\"   >   {{unit.name}}  </span>\r\n              </div>\r\n              <div *ngIf=\"unit==selectedUnit\">\r\n              \r\n                  <div *ngFor=\"let metric of selectedUnitMetrics; index as i;\">\r\n                    <mat-checkbox (change)=\"selectedMetric(metric,$event.checked)\"  > </mat-checkbox>                   \r\n                    <span class=\"name-column\"> {{metric}}</span>\r\n                  </div>\r\n           \r\n              </div>\r\n            </div>          \r\n        </div>\r\n      </div>\r\n    </td>\r\n    \r\n    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\r\n    class=\"example-element-row\"\r\n    [class.example-expanded-row]=\"expandedElement === element\"\r\n    (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n  </tr>\r\n</ng-container>\r\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-trends',\r\n  templateUrl: './trends.component.html',\r\n  styleUrls: ['./trends.component.css']\r\n})\r\nexport class TrendsComponent implements OnInit {\r\n  viewType:string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onActivate(){\r\n    console.log('onActivate');\r\n  }\r\n  onDeactivate(){\r\n    console.log('onDeactivate');\r\n  }\r\n  setContentView(type:string){\r\n    this.viewType=type;\r\n  }\r\n\r\n\r\n}\r\n","<mat-sidenav-container class=\"example-container\">\r\n    <mat-sidenav #sidenav mode=\"side\" opened=\"true\">\r\n      <trends-side ></trends-side>\r\n    </mat-sidenav>\r\n    \r\n    <mat-sidenav-content>\r\n      \r\n      <mat-toolbar>\r\n        <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n          <mat-icon>list</mat-icon>\r\n        </button>\r\n        <span>Trends</span>\r\n\r\n        <div class=\"views\">\r\n            <span> Type: </span>\r\n            <mat-icon  (click)=\"setContentView('chart')\"  >timeline</mat-icon>\r\n            <mat-icon  (click)=\"setContentView('table')\" >grid_on</mat-icon>\r\n        </div>\r\n\r\n        <div class=\"actions\">\r\n          <span>Devise:</span>\r\n            <!-- <h1 class=\"submenu-title push-right filter\" >  </h1> -->\r\n           <mat-icon>av_timer</mat-icon> <a  routerLink=\"/management/units\"   routerLinkActive=\"active-link \"   > Unit Detail </a>\r\n           <mat-icon>timeline</mat-icon> <a  routerLink=\"/management/users\"   routerLinkActive=\"active-link\"   > Trends </a>\r\n           <mat-icon>event_note</mat-icon> <a  routerLink=\"/management/groups\"  routerLinkActive=\"active-link\"   > Reports </a>\r\n           <mat-icon>cloud_download</mat-icon>   <a  routerLink=\"/management/activity\"routerLinkActive=\"active-link\"   > Downloads </a>\r\n           <mat-icon>settings</mat-icon>   <a  routerLink=\"/management/activity\"routerLinkActive=\"active-link\"   > Settings </a>\r\n          </div>\r\n    </mat-toolbar>   \r\n           <trends-content [ViewType]=viewType></trends-content>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>","import { NgModule } from  '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { Routes, RouterModule } from  '@angular/router';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\n\r\nimport { TrendsComponent } from './trends.component';\r\nimport { SideComponent } from './side/side.component';\r\nimport { TrendsContentComponent } from './content/content.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { TrendsViewDirective } from './content/trends-view.directive';\r\nimport { TableViewComponent } from './content/table-view/table-view.component';\r\nimport { ChartViewComponent } from './content/chart-view/chart-view.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport {DpDatePickerModule} from 'ng2-jalali-date-picker';\r\nimport { TimeRangeDilaogueComponent } from './content/time-range-dilaogue/time-range-dilaogue.component';\r\n\r\n\r\n\r\nconst  routes:  Routes  = [\r\n  {\r\n  path:  'trends',\r\n  component:  TrendsComponent,\r\n  children: [\r\n    {\r\n      path:  'qw/:id',\r\n      component: TrendsContentComponent,\r\n      // outlet: 'trendContent'\r\n    },\r\n    // {\r\n    //   path:  'users',\r\n    //   component:  UsersComponent\r\n    // },\r\n    // {\r\n    //   path:  'units',\r\n    //   component:  UnitsComponent\r\n    // },\r\n    // {\r\n    //   path:  'activity',\r\n    //   component:  ActivityComponent\r\n    // },\r\n    // {\r\n    //   path:  'edit',\r\n    //   component:  EditComponent\r\n    // }\r\n  ]\r\n  }\r\n  ];\r\n\r\n  \r\nimport { DateAdapter,MAT_DATE_FORMATS,  MAT_DATE_LOCALE } from \"@angular/material/core\";\r\n\r\nimport { MaterialPersianDateAdapter, PERSIAN_DATE_FORMATS } from \"../shared/material.persian-date.adapter\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\n@NgModule({\r\n  providers: [\r\n    { provide: DateAdapter, useClass: MaterialPersianDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n    { provide: MAT_DATE_FORMATS, useValue: PERSIAN_DATE_FORMATS }\r\n  ],\r\n  declarations: [TrendsComponent, SideComponent, TrendsContentComponent, TrendsViewDirective, TableViewComponent, ChartViewComponent, TimeRangeDilaogueComponent],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatCheckboxModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    FormsModule,\r\n    ReactiveFormsModule, \r\n    MatSelectModule,\r\n    BrowserModule,\r\n    ChartsModule,\r\n    DpDatePickerModule,\r\n\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class TrendsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { MessageService } from '../management/services/message.service';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n\r\n\r\nimport {  METRICS_amf25, METRICS_classic, METRICS_minit } from './mock-trends';\r\nimport { MetricInfo, SeriesInfo, TrendInfo } from './trendInfo';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport * as moment from 'moment';\r\nimport { WeekDay } from '@angular/common';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json',\r\n    Authorization: 'my-auth-token'\r\n  })\r\n};\r\n\r\nconst baseTrendsUrl =environment.api+ '/trends/';\r\nconst baseSidebarUrl =environment.sidebar+ '/sidebar/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrendsService {\r\nselectedSeries:SeriesInfo={metricsInfo:[],startDate: moment().subtract(1,'d').valueOf(),endDate:moment().valueOf()};\r\ntrendsInfos:TrendInfo[];\r\nmetrics_classic:string[];\r\nmetrics_minit:string[];\r\nmetrics_amf25:string[];\r\nconstructor(private http: HttpClient,\r\n    private messageService: MessageService\r\n    ) {\r\n    this.trendsInfos=[];    \r\n    this.metrics_classic=METRICS_classic;\r\n    this.metrics_minit=METRICS_minit;\r\n    this.metrics_amf25=METRICS_amf25;\r\n   }\r\n   private log(message: string) {\r\n   this.messageService.add(`UserService: ${message}`);\r\n  }\r\n\r\n  // getSeriesData(): Observable<any> {\r\n  //   return this.http.get(baseTrendsUrl);\r\n  // }\r\n\r\n  /** POST: Send seriesInfo to get series data from timeseries database */\r\n  getSeriesData(seriesInfo: SeriesInfo): Observable<any> {\r\n  return this.http.post<SeriesInfo>(baseTrendsUrl, seriesInfo, httpOptions)\r\n    .pipe(\r\n      catchError(err => of([]))\r\n    );\r\n}\r\n\r\n\r\n   getTrendsInfos(){\r\n    return this.http.get<TrendInfo[]>(baseSidebarUrl,httpOptions)\r\n    .pipe(\r\n      catchError(err => of([]))\r\n    );\r\n    //   return this.trendsInfos;\r\n   }\r\n\r\n   getUinitMetric(unitType){\r\n    this.selectedSeries.metricsInfo=[];\r\n    if(unitType==\"mint\")\r\n    return this.metrics_minit;\r\n    if(unitType==\"amf25\")\r\n    return this.metrics_amf25;\r\n    else\r\n    return this.metrics_classic;\r\n  }\r\n  addToList(item:MetricInfo){\r\n    this.selectedSeries.metricsInfo.push(item);\r\n  }\r\n  removeFromList(item:MetricInfo){\r\n   // const index = this.selectedSeries.metricsInfo.indexOf(item, 0);\r\n    const index = this.selectedSeries.metricsInfo.findIndex(x => x.Unit ===item.Unit && x.Measurment===item.Measurment);\r\n\r\n    if (index > -1) {\r\n      this.selectedSeries.metricsInfo.splice(index, 1);\r\n    }\r\n\r\n  }\r\n  getSelected(){return this.selectedSeries}\r\n  \r\n  \r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n  if (error.error instanceof ErrorEvent) {\r\n    // A client-side or network error occurred. Handle it accordingly.\r\n    console.error('An error occurred:', error.error.message);\r\n  } else {\r\n    // The backend returned an unsuccessful response code.\r\n    // The response body may contain clues as to what went wrong.\r\n    console.error(\r\n      `Backend returned code ${error.status}, ` +\r\n      `body was: ${error.error}`);\r\n    }\r\n    // Return an observable with a user-facing error message.\r\n  return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n// api:     'http://185.252.28.72:3600/api',\r\n   api:     'http://localhost:3600/api',\r\n   sidebar: 'http://localhost:3600/api',\r\n   authUrl: 'http://localhost:3600',\r\n   userUrl: 'http://localhost:3600',\r\n   useMockServer: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}